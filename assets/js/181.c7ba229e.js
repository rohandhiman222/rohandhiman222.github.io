(window.webpackJsonp=window.webpackJsonp||[]).push([[181],{465:function(t,n,s){"use strict";s.r(n);var e=s(14),a=Object(e.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"parcel"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#parcel"}},[t._v("#")]),t._v(" Parcel")]),t._v(" "),n("p",[n("code",[t._v("npm init -y")])]),t._v(" "),n("p",[n("code",[t._v("tsc --version")]),t._v(" typescript version")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("touch")]),t._v(" app.ts\ntsc "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--init")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# go to tsconfig.json file uncomment")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"noEmitOnError"')]),t._v(":true\n\n\n")])])]),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// app.js")]),t._v("\n\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"It\'s working "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// go to terminal `tsc app.ts or tsc` run this command")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// run time commnand in terminal `tsc` it automatic convert in js file on root and also root inside subfolder")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// tsc => work with root folder it automatic convert all root ts file convert into js")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// tsc --watch => it automatic compiles")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("////////// tsconfig.json ///////////")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// add files for exclude")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ** mean sub directory")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "exclude":["app.ts","node_modules", ".exclude.ts", ""**/*.exclude.ts] // it take array, not translate into js file this')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// only work include files inside include array")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "include":["src"] // only src folder compile')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//////////// rootDir and outDir //////////////")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// tsconfig.json file")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "rootDir":"./src" // only look inside src file')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// outDir: "./dist" mean all js compile inside dist folder')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('////// "lib":[] // by default added browser dom and document and Math lib target es6')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// if we uncomment lib we have to add manually")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// check every environment ts file")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/tsconfig/bases")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//////// type checking //////////")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "noImplicitAny"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// noUnusedLocals : true mean variable decalare not used warning")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// noUnusedParameters same like parameter not used")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// noImplicitReturns mean function return string")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// we need sometime it because we return statement above but below colde not work get error here")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// allowUncreachableCode : false")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// //////very important")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "sourceMap":true this mean console check file app.js not go this go to app.ts origin file path check number we are getting this issue there or console.log on that line')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// also can add break line")]),t._v("\n")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);