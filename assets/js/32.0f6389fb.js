(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{319:function(e,t,a){"use strict";a.r(t);var s=a(14),r=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"aws-codecommit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aws-codecommit"}},[e._v("#")]),e._v(" Aws codecommit")]),e._v(" "),t("p",[e._v("First create repo on codecommit")]),e._v(" "),t("p",[e._v("Iam user give this full permission")]),e._v(" "),t("p",[t("code",[e._v("AmazonECS_FullAccess")]),e._v(" "),t("code",[e._v("AWSCodeCommitFullAccess")]),e._v(" "),t("code",[e._v("AWSCodeCommitPowerUser")]),e._v(" "),t("code",[e._v("AdministratorAccess")])]),e._v(" "),t("p",[e._v("Git clone of codecommit repo")]),e._v(" "),t("p",[e._v("after that add files and push your code.")]),e._v(" "),t("h4",{attrs:{id:"ecr"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ecr"}},[e._v("#")]),e._v(" Ecr")]),e._v(" "),t("p",[e._v("Go to ecr and click to button get started")]),e._v(" "),t("p",[e._v("Create "),t("code",[e._v("private ecr repo ecr-aws-docker")]),e._v(" and copy "),t("code",[e._v("url of ecr")])]),e._v(" "),t("p",[e._v("go to codecommit open file "),t("code",[e._v("buildspec.yml")]),e._v(" and change url of "),t("code",[e._v("REPOSITORY_URI")]),e._v(" same paste url of "),t("code",[e._v("erc url")]),e._v(" and region "),t("code",[e._v("$(aws ecr get-login --no-include-email --region ap-south-1)")])]),e._v(" "),t("div",{staticClass:"language-docker extra-class"},[t("pre",{pre:!0,attrs:{class:"language-docker"}},[t("code",[e._v("\x3c!-- Docker file --\x3e\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FROM")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token options"}},[t("span",{pre:!0,attrs:{class:"token property"}},[e._v("--platform")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("linux/amd64")])]),e._v(" node:18-alpine")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("WORKDIR")]),e._v(" /app")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("COPY")]),e._v(" . .")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("RUN")]),e._v(" yarn install")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("CMD")]),e._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"node"')]),e._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"index.js"')]),e._v("]")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("EXPOSE")]),e._v(" 3000")]),e._v("\n")])])]),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// buildspec.yml")]),e._v("\n\nversion"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.2")]),e._v("\n\nphases"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n  install"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n    runtime-versions"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n      nodejs"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" latest\n    commands"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n      - nohup /usr/local/bin/dockerd --host=unix"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &")]),e._v("\n      - timeout "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("15")]),e._v(" sh -c "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"until docker info; do echo .; sleep 1; done"')]),e._v("\n  pre_build"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n    commands"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n      - echo log in to Amazon ECR...\n      - aws --version\n      - echo $AWS_DEFAULT_REGION\n      - $(aws ecr get-login --no-include-email --region us-east"),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("-1")]),e._v(")\n      - REPOSITORY_URI=<your_account_id>.dkr.ecr.us-east"),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("-1")]),e._v(".amazonaws.com/aws-ecs-docker\n      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("-7")]),e._v(")\n      - IMAGE_TAG=$"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("COMMIT_HASH"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("=latest"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  build"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n    commands"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n      - echo Build started on `date`\n      - echo Building the Docker image.\n      - docker build -t $REPOSITORY_URI"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("latest .\n      - docker tag $REPOSITORY_URI"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("latest $REPOSITORY_URI"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("$IMAGE_TAG\n  post_build"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n    commands"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n      - echo Build completed on `date`\n      - docker push $REPOSITORY_URI"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("latest\n      - docker push $REPOSITORY_URI"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("$IMAGE_TAG\n      - echo write definitions file...\n      - printf '"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"name"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"exp-code-pipeline"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"imageUri"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"%s"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("' $REPOSITORY_URI"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("$IMAGE_TAG > imagedefinitions.json\nartifacts"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("\n  files"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" imagedefinitions.json\n\n\n")])])]),t("h4",{attrs:{id:"codebuild"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#codebuild"}},[e._v("#")]),e._v(" codebuild")]),e._v(" "),t("p",[e._v("After that go to codebuild")]),e._v(" "),t("p",[e._v("click to create "),t("code",[e._v("Create build project")])]),e._v(" "),t("p",[e._v("project name "),t("code",[e._v("aws-ecr-docker")]),e._v(" select "),t("code",[e._v("Source")]),e._v(" codecommit and select your repo")]),e._v(" "),t("p",[e._v("Select "),t("code",[e._v("branch")])]),e._v(" "),t("p",[e._v("Environment => "),t("code",[e._v("manged image")]),e._v(" and "),t("code",[e._v("ec2")]),e._v(" select both")]),e._v(" "),t("p",[e._v("Operating system => "),t("code",[e._v("Amazon linux")]),e._v(" Runtimes "),t("code",[e._v("Standard")]),e._v(" image select any image")]),e._v(" "),t("p",[e._v("Image version Select "),t("code",[e._v("always use the latest image")])]),e._v(" "),t("p",[e._v("Privileged => "),t("code",[e._v("Select checkBox of")]),e._v(" Enable this flag if you want to build Docker images or want your builds to get elevated privileges")]),e._v(" "),t("h4",{attrs:{id:"logs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#logs"}},[e._v("#")]),e._v(" Logs")]),e._v(" "),t("p",[e._v("Group name "),t("code",[e._v("aws/ecr-logs")])]),e._v(" "),t("p",[e._v("click to "),t("code",[e._v("create build")]),e._v(" after that "),t("code",[e._v("start build button click")])]),e._v(" "),t("p",[e._v("if build is failed add this permission your rule when you created")]),e._v(" "),t("h4",{attrs:{id:"amazon-elastic-container-service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#amazon-elastic-container-service"}},[e._v("#")]),e._v(" Amazon Elastic Container Service")]),e._v(" "),t("p",[e._v("Click button create "),t("code",[e._v("cluster")]),e._v(" and cluster name "),t("code",[e._v("node-ecs-cluster")]),e._v("\nand checkbox only "),t("code",[e._v("AWS Fargate (serverless)")]),e._v(" and click to create")]),e._v(" "),t("p",[e._v("after that created cluster..")]),e._v(" "),t("p",[e._v("Click to sidebar Task definitions.")]),e._v(" "),t("p",[e._v("Click to "),t("code",[e._v("create new task definition")])]),e._v(" "),t("p",[t("code",[e._v("create new task definition")])]),e._v(" "),t("p",[e._v("Task definition family name "),t("code",[e._v("cluster-docker-es")])]),e._v(" "),t("p",[e._v("Launch type Select checkbox "),t("code",[e._v("AWS Fargate")])]),e._v(" "),t("p",[e._v("Change cpu and Memory")]),e._v(" "),t("h4",{attrs:{id:"container-1-info"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#container-1-info"}},[e._v("#")]),e._v(" Container - 1 Info")]),e._v(" "),t("p",[e._v("Container details")]),e._v(" "),t("p",[t("code",[e._v("Any name")]),e._v(" image url get from "),t("code",[e._v("ECR")])]),e._v(" "),t("p",[e._v("set port number of your project 3000")]),e._v(" "),t("p",[e._v("after that click to create")]),e._v(" "),t("p",[e._v("After go back select "),t("code",[e._v("sidebar Cluste")]),e._v("r and click y"),t("code",[e._v("our clusters name")])]),e._v(" "),t("p",[e._v("blew see "),t("code",[e._v("service tab")]),e._v(" and "),t("code",[e._v("create service")])]),e._v(" "),t("p",[t("code",[e._v("Compute configuration (advanced)")]),e._v(" select "),t("code",[e._v("Launch type")])]),e._v(" "),t("h4",{attrs:{id:"deployment-configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#deployment-configuration"}},[e._v("#")]),e._v(" Deployment configuration")]),e._v(" "),t("p",[t("code",[e._v("Family select")]),e._v("service name`")]),e._v(" "),t("h4",{attrs:{id:"networking"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#networking"}},[e._v("#")]),e._v(" Networking")]),e._v(" "),t("p",[e._v("Don't change right now we will change later")]),e._v(" "),t("p",[e._v("Use an existing security group select after that you have to provide another permission")]),e._v(" "),t("p",[e._v("create first")]),e._v(" "),t("h4",{attrs:{id:"select-tasks-tab"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#select-tasks-tab"}},[e._v("#")]),e._v(" Select Tasks Tab")]),e._v(" "),t("p",[e._v("Select task after see public ip check working ip or not")])])}),[],!1,null,null,null);t.default=r.exports}}]);