(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{356:function(t,a,s){"use strict";s.r(a);var e=s(14),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"back"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#back"}},[t._v("#")]),t._v(" "),a("RouterLink",{attrs:{to:"/blog/"}},[t._v("Back")])],1),t._v(" "),a("h1",{attrs:{id:"_50-interview-questions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_50-interview-questions"}},[t._v("#")]),t._v(" 50 interview questions")]),t._v(" "),a("p",[t._v("Certainly! Here's a list of 50 interview questions for an experienced JavaScript developer:")]),t._v(" "),a("h2",{attrs:{id:"explain-the-difference-between-undefined-and-null-in-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#explain-the-difference-between-undefined-and-null-in-javascript"}},[t._v("#")]),t._v(" Explain the difference between undefined and null in JavaScript.")]),t._v(" "),a("h1",{attrs:{id:"difference-between-undefined-and-null-in-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#difference-between-undefined-and-null-in-javascript"}},[t._v("#")]),t._v(" Difference Between "),a("code",[t._v("undefined")]),t._v(" and "),a("code",[t._v("null")]),t._v(" in JavaScript")]),t._v(" "),a("p",[t._v("In JavaScript, "),a("code",[t._v("undefined")]),t._v(" and "),a("code",[t._v("null")]),t._v(" are both primitive values that represent the absence of a value, but they are used in different contexts and signify different things.")]),t._v(" "),a("h2",{attrs:{id:"undefined"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#undefined"}},[t._v("#")]),t._v(" "),a("code",[t._v("undefined")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Meaning:")]),t._v(" "),a("code",[t._v("undefined")]),t._v(" means a variable has been declared but has not yet been assigned a value.")]),t._v(" "),a("li",[a("strong",[t._v("Default Value:")]),t._v(" It is the default value of a variable that has been declared but not defined.")]),t._v(" "),a("li",[a("strong",[t._v("Function Return:")]),t._v(" If a function does not explicitly return a value, it implicitly returns "),a("code",[t._v("undefined")]),t._v(".")]),t._v(" "),a("li",[a("strong",[t._v("Type:")]),t._v(" The type of "),a("code",[t._v("undefined")]),t._v(" is "),a("code",[t._v('"undefined"')]),t._v(".")])]),t._v(" "),a("h3",{attrs:{id:"example-of-undefined"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-of-undefined"}},[t._v("#")]),t._v(" Example of "),a("code",[t._v("undefined")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" variable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("variable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Outputs: undefined")]),t._v("\n")])])]),a("h2",{attrs:{id:"null"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null"}},[t._v("#")]),t._v(" null")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Meaning:")]),t._v(" null is an assignment value that represents a deliberate absence of any object value.")]),t._v(" "),a("li",[a("strong",[t._v("Intentional Blankness:")]),t._v(" It is used when you want to intentionally indicate that a variable is empty or unknown.")]),t._v(" "),a("li",[a("strong",[t._v("Type:")]),t._v(' The type of null is "object" (this is considered a bug in JavaScript).')])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" variable "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("variable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Outputs: null")]),t._v("\n")])])]),a("h2",{attrs:{id:"key-differences"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#key-differences"}},[t._v("#")]),t._v(" Key Differences")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Initialization:")]),t._v(" "),a("code",[t._v("undefined")]),t._v(" is the default state of a variable that has been declared but not initialized. "),a("code",[t._v("null")]),t._v(" is an assigned value, meaning it has to be explicitly assigned to a variable.")]),t._v(" "),a("li",[a("strong",[t._v("Semantic Meaning:")]),t._v(" "),a("code",[t._v("undefined")]),t._v(" typically means “a variable has been declared but not defined”, while "),a("code",[t._v("null")]),t._v(" is used to mean “a known absence of a value”.")]),t._v(" "),a("li",[a("strong",[t._v("Typeof Operator:")]),t._v(" "),a("code",[t._v("typeof")]),t._v(" "),a("code",[t._v("undefined")]),t._v(' returns "'),a("code",[t._v("undefined")]),t._v('", while '),a("code",[t._v("typeof")]),t._v(" "),a("code",[t._v("null")]),t._v(' returns "'),a("code",[t._v("object")]),t._v('".')])]),t._v(" "),a("h2",{attrs:{id:"use-cases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#use-cases"}},[t._v("#")]),t._v(" Use Cases")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("undefined Use Case:")]),t._v(" You usually encounter "),a("code",[t._v("undefined")]),t._v(" in situations where a variable or property has not been initialized or doesn't exist.")]),t._v(" "),a("li",[a("strong",[t._v("null Use Case:")]),t._v(" Use "),a("code",[t._v("null")]),t._v(" when you need to intentionally denote that a variable is "),a("code",[t._v("empty")]),t._v(" or "),a("code",[t._v("unknown")]),t._v(".")])]),t._v(" "),a("h2",{attrs:{id:"conclusion"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conclusion"}},[t._v("#")]),t._v(" Conclusion")]),t._v(" "),a("ul",[a("li",[t._v("Understanding the difference between "),a("code",[t._v("undefined")]),t._v(" and "),a("code",[t._v("null")]),t._v(" is important for proper error handling and control flow in JavaScript applications. While they both represent the absence of a value, they are used in different contexts and convey different meanings.")])]),t._v(" "),a("h2",{attrs:{id:"what-are-the-different-data-types-in-javascript-explain-each-one"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-are-the-different-data-types-in-javascript-explain-each-one"}},[t._v("#")]),t._v(" What are the different data types in JavaScript? Explain each one.")]),t._v(" "),a("p",[t._v("JavaScript is a loosely typed or a dynamic language, which means you don't need to declare the type of a variable ahead of time, and data types are automatically determined at runtime. JavaScript has eight basic data types:")]),t._v(" "),a("p",[a("strong",[t._v("1. String")])]),t._v(" "),a("p",[a("code",[t._v("Strings")]),t._v(" in JavaScript are used to represent textual data. They are surrounded by quotes which can be single, double, or backticks:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" single "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" double "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" templateLiterals "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("hello")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Allows for multi-line strings and string interpolation")]),t._v("\n")])])]),a("p",[a("strong",[t._v("2. Number")])]),t._v(" "),a("p",[t._v("The number type is used for both integer and floating-point numbers. There are special numeric values which are part of this data type: "),a("code",[t._v("Infinity")]),t._v(", -"),a("code",[t._v("Infinity")]),t._v(", and "),a("code",[t._v("NaN")]),t._v(" (Not-a-Number):")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" integer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" floatingPoint "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" inf "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("Infinity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" notANum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("3. BigInt")])]),t._v(" "),a("p",[t._v("The BigInt type was recently added to represent integers with arbitrary precision. A BigInt is created by appending n to the end of an integer:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" largeNumber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1234567890123456789012345678901234567890n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("4. Boolean")])]),t._v(" "),a("p",[t._v("Boolean represents a logical entity and can have only two values: "),a("code",[t._v("true")]),t._v(" or "),a("code",[t._v("false")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" isTrue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" isFalse "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("5. Undefined")])]),t._v(" "),a("p",[t._v("A variable that has not been assigned a value is of type "),a("code",[t._v("undefined")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" notDefined"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("notDefined"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n")])])]),a("p",[a("strong",[t._v("6. Null")])]),t._v(" "),a("p",[a("code",[t._v("null")]),t._v(" represents the intentional absence of any object value. It is one of JavaScript's primitive values and is treated as falsy for "),a("code",[t._v("boolean")]),t._v(" operations:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" emptyValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("7. Symbol")])]),t._v(" "),a("p",[t._v("Introduced in ECMAScript 2015, the symbol is a primitive data type that is unique and immutable. It can be used as the key for an object property:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" sym1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sym"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" sym2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sym"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sym1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" sym2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),a("p",[a("strong",[t._v("8. Object")])]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("object")]),t._v(" is a complex data type that allows you to store collections of data. It can be used to store keyed collections of various data and more complex entities:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" person "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"John"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("age")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"non-primitive-data-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#non-primitive-data-type"}},[t._v("#")]),t._v(" Non-Primitive Data Type:")]),t._v(" "),a("p",[a("code",[t._v("Object:")]),t._v(" Unlike the primitive data types, objects are used to store collections of data and more complex entities. In JavaScript, functions are also considered objects.")]),t._v(" "),a("h4",{attrs:{id:"special-note"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#special-note"}},[t._v("#")]),t._v(" Special Note:")]),t._v(" "),a("p",[a("code",[t._v("Arrays:")]),t._v(" In JavaScript, arrays are used to store multiple values in a single variable. Arrays are a special kind of object, suitable for storing and managing ordered data items.")]),t._v(" "),a("p",[a("code",[t._v("Functions:")]),t._v(" Functions in JavaScript are objects, a subtype of objects that are callable.")]),t._v(" "),a("p",[a("code",[t._v("Date, Error")]),t._v(", and other built-ins**: These are all technically objects, but they serve special purposes and come with their own properties and methods.")]),t._v(" "),a("h2",{attrs:{id:"describe-the-concept-of-hoisting-in-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#describe-the-concept-of-hoisting-in-javascript"}},[t._v("#")]),t._v(" Describe the concept of hoisting in JavaScript.")]),t._v(" "),a("p",[t._v("Hoisting is a JavaScript mechanism where variables and function declarations are moved to the top of their containing scope before the code has been executed. Regardless of where functions and variables are declared, they are moved to the top of their enclosing scope, which is the function or global scope they belong to.")]),t._v(" "),a("p",[t._v("It's important to note that only the declarations are hoisted, not initializations. Let's break down the concept for both variables and functions:")]),t._v(" "),a("h4",{attrs:{id:"variable-hoisting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variable-hoisting"}},[t._v("#")]),t._v(" Variable Hoisting")]),t._v(" "),a("p",[t._v("When you declare a variable with "),a("code",[t._v("var")]),t._v(", the declaration is hoisted to the top of the current execution context, but the assignment of its value is not. This means if you try to use a variable before it is declared and initialized, it will exist but will have a value of "),a("code",[t._v("undefined")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myVar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined, not ReferenceError")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myVar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("The example above behaves as if it were executed like this:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myVar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myVar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\nmyVar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("However, with "),a("code",[t._v("let")]),t._v(" and "),a("code",[t._v("const")]),t._v(" in ES6, the hoisting behavior is different. They are also hoisted to the top of their block scope, but they are not initialized with "),a("code",[t._v("undefined")]),t._v(". Accessing them before the declaration results in a "),a("code",[t._v("ReferenceError")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myLet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ReferenceError: myLet is not defined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myLet "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"function-hoisting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function-hoisting"}},[t._v("#")]),t._v(" Function Hoisting")]),t._v(" "),a("p",[t._v("Function declarations are hoisted completely to the top, which means the entire function body is lifted up and can be used before it is declared.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myFunc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "Hello, world!"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myFunc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello, world!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("Function expressions")]),t._v(", however, are treated "),a("code",[t._v("similarly")]),t._v(" to "),a("code",[t._v("variables")]),t._v(". If a function is defined as an expression, especially with "),a("code",[t._v("let")]),t._v(", "),a("code",[t._v("const")]),t._v(", or as an anonymous function assigned to a variable, the hoisting will not occur in the same way.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myFunc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myFunc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TypeError: myFunc is not a function")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("myFunc")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello, world!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("In the case of function expressions, the variable "),a("code",[t._v("myFunc")]),t._v(" is hoisted, but its type is "),a("code",[t._v("undefined")]),t._v(" until the function is assigned to it.")]),t._v(" "),a("h2",{attrs:{id:"what-is-closure-in-javascript-provide-an-example-of-its-usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-closure-in-javascript-provide-an-example-of-its-usage"}},[t._v("#")]),t._v(" What is closure in JavaScript? Provide an example of its usage.")]),t._v(" "),a("p",[t._v("A closure in JavaScript is a combination of a function and the lexical environment within which that function was declared. This environment consists of any local variables that were in-scope at the time the closure was created.")]),t._v(" "),a("p",[t._v("Closures are a fundamental and powerful property of JavaScript functions, and they occur naturally when a function is defined within another function, allowing the inner function to access variables from its parent function's scope, even after the parent function has completed execution.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createGreeting")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("greeting")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("greeting "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" greetHello "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createGreeting")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("greetHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Alice"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Outputs: "Hello, Alice"')]),t._v("\n")])])]),a("p",[t._v("In this example, "),a("code",[t._v("createGreeting")]),t._v(" is a function that takes one argument, "),a("code",[t._v("greeting")]),t._v(", and returns a new function. The function that is returned (the inner function) takes one argument, "),a("code",[t._v("name")]),t._v(", and logs a message to the console that includes both "),a("code",[t._v("greeting")]),t._v(" and "),a("code",[t._v("name")]),t._v(".")]),t._v(" "),a("p",[t._v("The returned function maintains a reference to the variable "),a("code",[t._v("greeting")]),t._v(" from its parent function's scope. When "),a("code",[t._v("greetHello")]),t._v(" is called with 'Alice', it still has access to the "),a("code",[t._v("greeting")]),t._v(" variable that was provided when "),a("code",[t._v("greetHello")]),t._v(" was created. This is possible because of closures.")]),t._v(" "),a("h4",{attrs:{id:"practical-usage-of-closure"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#practical-usage-of-closure"}},[t._v("#")]),t._v(" Practical Usage of Closure:")]),t._v(" "),a("p",[t._v("Closures are often used to create "),a("code",[t._v("factory")]),t._v(" functions, "),a("code",[t._v("encapsulate")]),t._v(" data, and create "),a("code",[t._v("private")]),t._v(" variables. Here's an example of creating private variables using closures:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createCounter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("increment")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("decrement")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" counter "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createCounter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncounter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("increment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Outputs: 1")]),t._v("\ncounter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("increment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Outputs: 2")]),t._v("\ncounter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("decrement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Outputs: 1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// There is no way to access the `count` variable directly from outside.")]),t._v("\n")])])]),a("p",[t._v("In the "),a("code",[t._v("createCounter")]),t._v(" example, the "),a("code",[t._v("count")]),t._v(" variable is "),a("code",[t._v("encapsulated")]),t._v(" within the closure created by the "),a("code",[t._v("createCounter")]),t._v(" function. It cannot be accessed directly from outside, effectively making it a "),a("code",[t._v("private")]),t._v(" variable. The "),a("code",[t._v("increment")]),t._v(" and "),a("code",[t._v("decrement")]),t._v(" methods are closures that have access to the "),a("code",[t._v("count")]),t._v(" "),a("code",[t._v("variable")]),t._v(", allowing them to modify its value when they are called.")]),t._v(" "),a("h2",{attrs:{id:"how-does-javascript-handle-asynchronous-programming-explain-the-event-loop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-does-javascript-handle-asynchronous-programming-explain-the-event-loop"}},[t._v("#")]),t._v(" How does JavaScript handle asynchronous programming? Explain the event loop.")]),t._v(" "),a("p",[t._v("JavaScript handles asynchronous programming through an event-driven, non-blocking I/O model. This is particularly powerful in web programming where you often have to deal with events, like user interactions, server requests, and file operations, without freezing the entire application. The event loop, along with the call stack, callback queue, microtask queue, and other Web API features, enables JavaScript to perform non-blocking operations, despite being single-threaded.")]),t._v(" "),a("p",[t._v("Here's how it works:")]),t._v(" "),a("h4",{attrs:{id:"the-call-stack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-call-stack"}},[t._v("#")]),t._v(" The Call Stack")]),t._v(" "),a("p",[t._v("This is where the JavaScript runtime keeps track of all the functions that need to be executed. When a function is called, it's pushed onto the stack. When JavaScript finishes calling a function, it's popped off the stack.")]),t._v(" "),a("h4",{attrs:{id:"web-apis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web-apis"}},[t._v("#")]),t._v(" Web APIs")]),t._v(" "),a("p",[t._v("These are provided by the browser (in the case of frontend JavaScript). When asynchronous code is executed, such as "),a("code",[t._v("setTimeout")]),t._v(", "),a("code",[t._v("XMLHttpRequest")]),t._v(", or any other asynchronous API, the request is processed outside of the call stack in the Web API space.")]),t._v(" "),a("h4",{attrs:{id:"the-event-loop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-event-loop"}},[t._v("#")]),t._v(" The Event Loop")]),t._v(" "),a("p",[t._v("The event loop is what allows JavaScript to perform non-blocking operations. It continuously checks the call stack to see if there's any work to be done.")]),t._v(" "),a("h4",{attrs:{id:"the-callback-queue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-callback-queue"}},[t._v("#")]),t._v(" The Callback Queue")]),t._v(" "),a("p",[t._v("When an asynchronous operation is completed, the callback function associated with it is placed into the callback queue. If the call stack is empty (i.e., all the functions have finished executing), the event loop will take the first event from the queue and push it onto the call stack, which effectively runs the callback.")]),t._v(" "),a("h4",{attrs:{id:"the-microtask-queue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-microtask-queue"}},[t._v("#")]),t._v(" The Microtask Queue")]),t._v(" "),a("p",[t._v("This is used for promises. When a promise is resolved or rejected, its ."),a("code",[t._v("then()")]),t._v(", ."),a("code",[t._v("catch()")]),t._v(", or ."),a("code",[t._v("finally()")]),t._v(" callbacks are placed in the microtask queue, which has "),a("code",[t._v("higher priority")]),t._v(" than the callback queue. The event loop checks the microtask queue before the callback queue; all tasks in the microtask queue are executed before the event loop continues with the normal callback queue.")]),t._v(" "),a("p",[t._v("Example Flow:")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("A function is called and pushed onto the call stack.")])]),t._v(" "),a("li",[a("p",[t._v("If the function performs an asynchronous operation, the operation is sent to the Web API.")])]),t._v(" "),a("li",[a("p",[t._v("The function exits, getting popped off the call stack.")])]),t._v(" "),a("li",[a("p",[t._v("The Web API processes the operation.")])]),t._v(" "),a("li",[a("p",[t._v("Upon completion, the callback function is placed in the callback queue (or microtask queue if it's a promise).")])]),t._v(" "),a("li",[a("p",[t._v("The event loop checks if the call stack is empty. If it is, it takes the event from the (micro)task queue and pushes it onto the call stack.")])]),t._v(" "),a("li",[a("p",[t._v("The callback is executed.")])])]),t._v(" "),a("p",[t._v("Here's a simple example:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"First"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Second"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Third"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Even though "),a("code",[t._v("setTimeout")]),t._v(" has a delay of "),a("code",[t._v("0")]),t._v(", the output will be:")]),t._v(" "),a("p",[t._v("First\nThird\nSecond")]),t._v(" "),a("p",[t._v("This is because "),a("code",[t._v("setTimeout")]),t._v(" is asynchronous. The callback goes through the Web API and then to the callback queue, while the rest of the code continues to execute synchronously. Once the call stack is clear, the event loop pushes the callback from "),a("code",[t._v("setTimeout")]),t._v(" onto the stack, resulting in 'Second' being logged last.")]),t._v(" "),a("p",[t._v("in js")]),t._v(" "),a("h1",{attrs:{id:"asynchronous-programming-and-the-event-loop-in-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#asynchronous-programming-and-the-event-loop-in-javascript"}},[t._v("#")]),t._v(" Asynchronous Programming and the Event Loop in JavaScript")]),t._v(" "),a("p",[t._v("JavaScript is a single-threaded programming language, which means it can only execute one command at a time. To handle asynchronous operations — like API calls, file reading, etc. — JavaScript uses a mechanism known as the Event Loop.")]),t._v(" "),a("h2",{attrs:{id:"asynchronous-programming-in-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#asynchronous-programming-in-javascript"}},[t._v("#")]),t._v(" Asynchronous Programming in JavaScript")]),t._v(" "),a("h3",{attrs:{id:"_1-callback-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-callback-functions"}},[t._v("#")]),t._v(" 1. Callback Functions")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Early Approach")]),t._v(": Functions that are passed as arguments to be executed after the completion of an asynchronous operation.")]),t._v(" "),a("li",[a("strong",[t._v("Limitation")]),t._v(': Can lead to "callback hell," where nested callbacks become difficult to read and maintain.')])]),t._v(" "),a("h3",{attrs:{id:"_2-promises"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-promises"}},[t._v("#")]),t._v(" 2. Promises")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Evolution")]),t._v(": Represents the eventual completion (or failure) of an asynchronous operation and its resulting value.")]),t._v(" "),a("li",[a("strong",[t._v("Benefits")]),t._v(": Simplifies the chaining of asynchronous operations and improves error handling with "),a("code",[t._v(".then()")]),t._v(" and "),a("code",[t._v(".catch()")]),t._v(".")])]),t._v(" "),a("h3",{attrs:{id:"_3-async-await"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-async-await"}},[t._v("#")]),t._v(" 3. Async/Await")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Modern Syntax")]),t._v(": Syntactic sugar built on top of Promises, making asynchronous code look more like synchronous code.")]),t._v(" "),a("li",[a("strong",[t._v("Usage")]),t._v(": Functions are declared with "),a("code",[t._v("async")]),t._v(", and asynchronous calls are awaited using the "),a("code",[t._v("await")]),t._v(" keyword.")])]),t._v(" "),a("h2",{attrs:{id:"the-event-loop-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-event-loop-2"}},[t._v("#")]),t._v(" The Event Loop")]),t._v(" "),a("p",[t._v("The event loop is the secret behind JavaScript's asynchronous programming. Here's how it works:")]),t._v(" "),a("h3",{attrs:{id:"_1-call-stack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-call-stack"}},[t._v("#")]),t._v(" 1. Call Stack")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Execution Context")]),t._v(": Functions are pushed onto the call stack as they are called and popped off when they are returned.")]),t._v(" "),a("li",[a("strong",[t._v("LIFO Structure")]),t._v(": Operates as a Last-In-First-Out (LIFO) structure.")])]),t._v(" "),a("h3",{attrs:{id:"_2-web-apis-node-apis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-web-apis-node-apis"}},[t._v("#")]),t._v(" 2. Web APIs/Node APIs")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Handling Asynchronous Tasks")]),t._v(": When asynchronous functions are executed, they are handed over to Web APIs (in browsers) or Node APIs (in Node.js).")]),t._v(" "),a("li",[a("strong",[t._v("Non-Blocking")]),t._v(": These APIs handle the asynchronous operations, allowing the call stack to continue running other code.")])]),t._v(" "),a("h3",{attrs:{id:"_3-callback-queue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-callback-queue"}},[t._v("#")]),t._v(" 3. Callback Queue")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Queuing Callbacks")]),t._v(": Once an asynchronous operation is complete, its callback is placed in the Callback Queue (also known as Task Queue).")]),t._v(" "),a("li",[a("strong",[t._v("FIFO Structure")]),t._v(": Operates as a First-In-First-Out (FIFO) queue.")])]),t._v(" "),a("h3",{attrs:{id:"_4-event-loop-s-role"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-event-loop-s-role"}},[t._v("#")]),t._v(" 4. Event Loop's Role")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Orchestration")]),t._v(": The event loop constantly checks the call stack. If the stack is empty and there are callbacks in the queue, it dequeues a callback and pushes it onto the call stack.")]),t._v(" "),a("li",[a("strong",[t._v("Continuous Loop")]),t._v(": This loop continues for the lifetime of the application, handling all asynchronous callbacks.")])]),t._v(" "),a("h2",{attrs:{id:"conclusion-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conclusion-2"}},[t._v("#")]),t._v(" Conclusion")]),t._v(" "),a("p",[t._v("JavaScript handles asynchronous programming through mechanisms like callbacks, promises, and async/await, which are managed efficiently by the event loop. The event loop facilitates non-blocking operations by offloading asynchronous tasks, maintaining an active call stack, and systematically processing queued callbacks.")]),t._v(" "),a("p",[t._v("in Nodejs")]),t._v(" "),a("h1",{attrs:{id:"asynchronous-programming-in-node-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#asynchronous-programming-in-node-js"}},[t._v("#")]),t._v(" Asynchronous Programming in Node.js")]),t._v(" "),a("p",[t._v("Node.js, built on the V8 JavaScript engine, excels in handling asynchronous operations and is widely used for building scalable network applications. Understanding how Node.js handles asynchronous programming involves exploring the event loop and associated mechanisms.")]),t._v(" "),a("h2",{attrs:{id:"node-js-and-asynchronous-programming"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-js-and-asynchronous-programming"}},[t._v("#")]),t._v(" Node.js and Asynchronous Programming")]),t._v(" "),a("p",[t._v("Node.js uses non-blocking, event-driven architecture, allowing it to handle numerous simultaneous operations without the overhead of threads.")]),t._v(" "),a("h3",{attrs:{id:"_1-non-blocking-i-o"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-non-blocking-i-o"}},[t._v("#")]),t._v(" 1. Non-Blocking I/O")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Efficient Data Handling")]),t._v(": Node.js performs I/O operations asynchronously to avoid blocking the main thread.")]),t._v(" "),a("li",[a("strong",[t._v("Examples")]),t._v(": File system operations, network requests, database queries.")])]),t._v(" "),a("h3",{attrs:{id:"_2-callback-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-callback-functions"}},[t._v("#")]),t._v(" 2. Callback Functions")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Asynchronous Convention")]),t._v(": Functions that are called when an asynchronous operation completes.")]),t._v(" "),a("li",[a("strong",[t._v("Error-First Callbacks")]),t._v(": Common pattern in Node.js where the first parameter of the callback is reserved for an error object.")])]),t._v(" "),a("h3",{attrs:{id:"_3-promises-and-async-await"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-promises-and-async-await"}},[t._v("#")]),t._v(" 3. Promises and Async/Await")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Modern Approach")]),t._v(": Provides a cleaner and more readable way to handle asynchronous code compared to callbacks.")]),t._v(" "),a("li",[a("strong",[t._v("Native Support")]),t._v(": Node.js has built-in support for Promises and Async/Await.")])]),t._v(" "),a("h2",{attrs:{id:"the-event-loop-in-node-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-event-loop-in-node-js"}},[t._v("#")]),t._v(" The Event Loop in Node.js")]),t._v(" "),a("p",[t._v("The event loop is a crucial component of Node.js's architecture.")]),t._v(" "),a("h3",{attrs:{id:"_1-single-threaded-loop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-single-threaded-loop"}},[t._v("#")]),t._v(" 1. Single Threaded Loop")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Core Mechanism")]),t._v(": While Node.js has a single main thread, many asynchronous operations are handled in a non-blocking way.")]),t._v(" "),a("li",[a("strong",[t._v("Event Loop's Role")]),t._v(": Manages and processes asynchronous tasks and interfaces with the operating system to schedule work.")])]),t._v(" "),a("h3",{attrs:{id:"_2-phases-of-the-event-loop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-phases-of-the-event-loop"}},[t._v("#")]),t._v(" 2. Phases of the Event Loop")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Timers")]),t._v(": Executes callbacks scheduled by "),a("code",[t._v("setTimeout()")]),t._v(" and "),a("code",[t._v("setInterval()")]),t._v(".")]),t._v(" "),a("li",[a("strong",[t._v("I/O Callbacks")]),t._v(": Handles most callbacks, including I/O-related and deferred ones.")]),t._v(" "),a("li",[a("strong",[t._v("Poll Phase")]),t._v(": Retrieves new I/O events and executes their callbacks.")]),t._v(" "),a("li",[a("strong",[t._v("Check Phase")]),t._v(": "),a("code",[t._v("setImmediate()")]),t._v(" callbacks are executed here.")]),t._v(" "),a("li",[a("strong",[t._v("Close Callbacks")]),t._v(": Handles some specialized cleanup callbacks.")])]),t._v(" "),a("h3",{attrs:{id:"_3-offloading-work"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-offloading-work"}},[t._v("#")]),t._v(" 3. Offloading Work")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Worker Pool")]),t._v(": Node.js uses a pool of worker threads, managed by "),a("code",[t._v("libuv")]),t._v(", for tasks like file I/O, DNS operations, or cryptography.")]),t._v(" "),a("li",[a("strong",[t._v("Non-Blocking")]),t._v(": This approach keeps the main thread free for handling other requests.")])]),t._v(" "),a("h2",{attrs:{id:"node-js-asynchronous-apis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-js-asynchronous-apis"}},[t._v("#")]),t._v(" Node.js' Asynchronous APIs")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("File System (fs)")]),t._v(": Asynchronous file operations.")]),t._v(" "),a("li",[a("strong",[t._v("HTTP Module")]),t._v(": Handling HTTP requests and responses.")]),t._v(" "),a("li",[a("strong",[t._v("Streams")]),t._v(": For processing data in chunks asynchronously.")])]),t._v(" "),a("h2",{attrs:{id:"conclusion-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conclusion-3"}},[t._v("#")]),t._v(" Conclusion")]),t._v(" "),a("p",[t._v("Node.js is designed for scalable network applications, largely due to its non-blocking, event-driven architecture. The event loop, along with Node.js's asynchronous APIs and the worker pool provided by "),a("code",[t._v("libuv")]),t._v(", allows efficient handling of operations without blocking the main thread, making Node.js suitable for I/O-heavy tasks and real-time applications.")]),t._v(" "),a("h2",{attrs:{id:"what-is-the-difference-between-let-const-and-var-in-javascript-when-would-you-use-each-one"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-the-difference-between-let-const-and-var-in-javascript-when-would-you-use-each-one"}},[t._v("#")]),t._v(" What is the difference between let, const, and var in JavaScript? When would you use each one?")]),t._v(" "),a("p",[a("code",[t._v("let")]),t._v(", "),a("code",[t._v("const")]),t._v(", and "),a("code",[t._v("var")]),t._v(" are all used for variable declaration in JavaScript, but they have different scopes and behaviors. Here's how they differ:")]),t._v(" "),a("h4",{attrs:{id:"var"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#var"}},[t._v("#")]),t._v(" var")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("Function Scope:")]),t._v(" Variables declared with "),a("code",[t._v("var")]),t._v(" are scoped to the function within which they are defined, or if declared outside of a function, they are globally scoped.")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Hoisting:")]),t._v(" Variables declared with "),a("code",[t._v("var")]),t._v(" are hoisted to the top of their scope and initialized with a value of "),a("code",[t._v("undefined")]),t._v(".")])]),t._v(" "),a("li",[a("p",[t._v("Re-declaration: You can re-declare the same variable multiple times using "),a("code",[t._v("var")]),t._v(".")])])]),t._v(" "),a("p",[a("strong",[t._v("Example Usage:")]),t._v(" "),a("code",[t._v("var")]),t._v(" is mostly used in legacy code. In modern JavaScript, you would use let or const instead for better scope control.")]),t._v(" "),a("h4",{attrs:{id:"let"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#let"}},[t._v("#")]),t._v(" let")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("Block Scope:")]),t._v(" Variables declared with "),a("code",[t._v("let")]),t._v(" are scoped to the nearest enclosing block (e.g., a function, 1 statement, or loop).")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Hoisting:")]),t._v(" Variables declared with "),a("code",[t._v("let")]),t._v(" are hoisted to the top of their block, but not initialized, resulting in a temporal dead zone from the start of the block until the declaration is encountered.")])]),t._v(" "),a("li",[a("p",[t._v("Re-declaration: You cannot re-declare the same variable within the same block scope using "),a("code",[t._v("let")]),t._v(".")])])]),t._v(" "),a("p",[a("strong",[t._v("Example Usage:")]),t._v(" Use "),a("code",[t._v("let")]),t._v(" when you need to reassign a variable, or when the variable is only needed in a specific block of code.")]),t._v(" "),a("h4",{attrs:{id:"const"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#const"}},[t._v("#")]),t._v(" const")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("Block Scope:")]),t._v(" Like "),a("code",[t._v("let")]),t._v(", "),a("code",[t._v("const")]),t._v(" is also scoped to the nearest enclosing block.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Hoisting:")]),t._v(" Same hoisting behavior as "),a("code",[t._v("let")]),t._v(", with a temporal dead zone.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Immutability:")]),t._v(" Variables declared with "),a("code",[t._v("const")]),t._v(" must be initialized at the time of declaration and cannot be reassigned later. However, the contents of a "),a("code",[t._v("const")]),t._v(" object can be altered (the object is mutable).")])])]),t._v(" "),a("p",[a("strong",[t._v("Re-declaration:")]),t._v(" Similar to "),a("code",[t._v("let")]),t._v(", you cannot re-declare the same variable within the same block scope.")]),t._v(" "),a("p",[a("code",[t._v("Example Usage:")]),t._v(" Use "),a("code",[t._v("const")]),t._v(" when declaring variables that you don't want to be reassigned in the future. This is the preferred method for declaring variables unless you know the value will change, as it provides a level of immutability and temporal dead zone safety.")]),t._v(" "),a("h4",{attrs:{id:"when-to-use-each"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#when-to-use-each"}},[t._v("#")]),t._v(" When to Use Each")]),t._v(" "),a("p",[a("code",[t._v("var")]),t._v(": Generally, avoid using "),a("code",[t._v("var")]),t._v(" in modern JavaScript. You might encounter it in legacy code or use it in a situation where function scope is explicitly desired or when hoisting behavior is needed.")]),t._v(" "),a("p",[a("code",[t._v("let")]),t._v(": Use "),a("code",[t._v("let")]),t._v(" when you need to reassign a variable, or when the variable's value will only be needed within a specific block of code, like in loops or "),a("code",[t._v("if")]),t._v(" statements.")]),t._v(" "),a("p",[a("code",[t._v("const:")]),t._v(" Use "),a("code",[t._v("const")]),t._v(" for all variables that will not be reassigned. It's a good default choice because it makes the code easier to reason about when you know that the value of "),a("code",[t._v("const")]),t._v(" cannot be changed once set.")]),t._v(" "),a("h2",{attrs:{id:"explain-the-concept-of-prototypal-inheritance-in-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#explain-the-concept-of-prototypal-inheritance-in-javascript"}},[t._v("#")]),t._v(" Explain the concept of prototypal inheritance in JavaScript.")]),t._v(" "),a("p",[t._v('Prototypal inheritance is a feature in JavaScript that allows objects to inherit properties and methods from other objects. This is one of the key features that sets JavaScript apart from class-based languages. In JavaScript, objects can inherit features from other objects through a "prototype chain."')]),t._v(" "),a("h1",{attrs:{id:"prototypal-inheritance-in-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prototypal-inheritance-in-javascript"}},[t._v("#")]),t._v(" Prototypal Inheritance in JavaScript")]),t._v(" "),a("p",[t._v("Prototypal inheritance is a core concept in JavaScript, fundamentally different from the classical inheritance model found in languages like Java or C#. It's a method by which objects can inherit properties and methods from other objects.")]),t._v(" "),a("h2",{attrs:{id:"understanding-prototypes-in-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#understanding-prototypes-in-javascript"}},[t._v("#")]),t._v(" Understanding Prototypes in JavaScript")]),t._v(" "),a("h3",{attrs:{id:"_1-every-javascript-object-has-a-prototype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-every-javascript-object-has-a-prototype"}},[t._v("#")]),t._v(" 1. Every JavaScript Object Has a Prototype")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Prototype Object")]),t._v(": An object from which another object can inherit properties.")]),t._v(" "),a("li",[a("strong",[t._v("Prototype Chain")]),t._v(": Objects are linked together in a chain, with each object having access to the properties of its prototype.")])]),t._v(" "),a("h3",{attrs:{id:"_2-prototype-property"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-prototype-property"}},[t._v("#")]),t._v(" 2. Prototype Property")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Function's Prototype")]),t._v(": Every function in JavaScript has a "),a("code",[t._v("prototype")]),t._v(" property (except arrow functions), which is an object.")])]),t._v(" "),a("h2",{attrs:{id:"how-prototypal-inheritance-works"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-prototypal-inheritance-works"}},[t._v("#")]),t._v(" How Prototypal Inheritance Works")]),t._v(" "),a("h3",{attrs:{id:"_1-inheriting-properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-inheriting-properties"}},[t._v("#")]),t._v(" 1. Inheriting Properties")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Property Lookup")]),t._v(": When accessing a property of an object, JavaScript looks up the property on the object itself; if not found, it searches the object's prototype, and so on up the chain.")])]),t._v(" "),a("h3",{attrs:{id:"_2-the-proto-property"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-the-proto-property"}},[t._v("#")]),t._v(" 2. The "),a("code",[t._v("__proto__")]),t._v(" Property")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Link to Prototype")]),t._v(": Each object has a "),a("code",[t._v("__proto__")]),t._v(" property (non-standard but widely supported) that points to its prototype.")])]),t._v(" "),a("h3",{attrs:{id:"_3-the-object-create-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-the-object-create-method"}},[t._v("#")]),t._v(" 3. The "),a("code",[t._v("Object.create")]),t._v(" Method")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Creating Objects")]),t._v(": "),a("code",[t._v("Object.create(proto)")]),t._v(" creates a new object with the specified prototype object and properties.")])]),t._v(" "),a("h3",{attrs:{id:"_4-constructor-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-constructor-functions"}},[t._v("#")]),t._v(" 4. Constructor Functions")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Constructing Objects")]),t._v(": Constructor functions can be used with the "),a("code",[t._v("new")]),t._v(" keyword to create objects. The newly created object's prototype is set to the constructor function's "),a("code",[t._v("prototype")]),t._v(" object.")])]),t._v(" "),a("h3",{attrs:{id:"_5-es6-classes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-es6-classes"}},[t._v("#")]),t._v(" 5. ES6 Classes")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Syntactic Sugar")]),t._v(": JavaScript classes, introduced in ES6, provide a more familiar syntax for creating objects and dealing with inheritance, but they are still based on prototypal inheritance under the hood.")])]),t._v(" "),a("h2",{attrs:{id:"example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" Example")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Animal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("speak")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" makes a sound.")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" dog "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Dog"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("speak")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Dog makes a sound.")]),t._v("\n")])])]),a("p",[t._v("In this example, "),a("code",[t._v("dog")]),t._v(" inherits the speak method from the "),a("code",[t._v("Animal")]),t._v(" prototype.")]),t._v(" "),a("h2",{attrs:{id:"additional-information"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#additional-information"}},[t._v("#")]),t._v(" Additional Information")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Benefits of Prototypal Inheritance")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Simplicity:")]),t._v(" More straightforward and flexible than classical inheritance.")]),t._v(" "),a("li",[a("strong",[t._v("Memory Efficiency:")]),t._v(" Shared properties/methods are stored in prototypes, not in each object.")])])])]),t._v(" "),a("h2",{attrs:{id:"key-differences-from-classical-inheritance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#key-differences-from-classical-inheritance"}},[t._v("#")]),t._v(" Key Differences from Classical Inheritance")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("No Classes:")]),t._v(' JavaScript doesn\'t have "classes" in the traditional sense (prior to ES6).')])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Dynamic:")]),t._v(" Prototypes can be altered at runtime, affecting all objects that inherit from them.")])])]),t._v(" "),a("h2",{attrs:{id:"conclusion-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conclusion-4"}},[t._v("#")]),t._v(" Conclusion")]),t._v(" "),a("p",[t._v("Prototypal inheritance is a powerful and flexible feature of JavaScript. It provides a unique approach to object-oriented programming, allowing objects to inherit properties and methods in a way that is more dynamic and memory-efficient than classical inheritance models.")]),t._v(" "),a("h4",{attrs:{id:"how-prototypal-inheritance-works-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-prototypal-inheritance-works-2"}},[t._v("#")]),t._v(" How Prototypal Inheritance Works:")]),t._v(" "),a("h2",{attrs:{id:"describe-the-concept-of-functional-programming-in-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#describe-the-concept-of-functional-programming-in-javascript"}},[t._v("#")]),t._v(" Describe the concept of functional programming in JavaScript.")]),t._v(" "),a("h1",{attrs:{id:"functional-programming-in-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#functional-programming-in-javascript"}},[t._v("#")]),t._v(" Functional Programming in JavaScript")]),t._v(" "),a("p",[t._v("Functional programming (FP) is a programming paradigm in JavaScript that treats computation as the evaluation of mathematical functions and avoids changing-state and mutable data. It emphasizes the use of functions and declarative programming over imperative programming.")]),t._v(" "),a("h2",{attrs:{id:"core-concepts-of-functional-programming"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#core-concepts-of-functional-programming"}},[t._v("#")]),t._v(" Core Concepts of Functional Programming")]),t._v(" "),a("h3",{attrs:{id:"_1-first-class-and-higher-order-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-first-class-and-higher-order-functions"}},[t._v("#")]),t._v(" 1. First-Class and Higher-Order Functions")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("First-Class Functions")]),t._v(": Functions are treated as first-class citizens, meaning they can be assigned to variables, passed as arguments, and returned from other functions.")]),t._v(" "),a("li",[a("strong",[t._v("Higher-Order Functions")]),t._v(": Functions that take other functions as arguments or return them as results.")])]),t._v(" "),a("h3",{attrs:{id:"_2-pure-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-pure-functions"}},[t._v("#")]),t._v(" 2. Pure Functions")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Deterministic")]),t._v(": Given the same inputs, always returns the same output.")]),t._v(" "),a("li",[a("strong",[t._v("No Side Effects")]),t._v(": Does not cause any side effects in the application (e.g., modifying external variables, logging, etc).")])]),t._v(" "),a("h3",{attrs:{id:"_3-immutability"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-immutability"}},[t._v("#")]),t._v(" 3. Immutability")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Unchanging State")]),t._v(": Once a data structure is created, it cannot be changed.")]),t._v(" "),a("li",[a("strong",[t._v("Immutable Data")]),t._v(": Encourages the use of immutable data structures and operations that do not modify the data.")])]),t._v(" "),a("h3",{attrs:{id:"_4-function-composition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-function-composition"}},[t._v("#")]),t._v(" 4. Function Composition")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Combining Functions")]),t._v(": Functions are composed together to build more complex operations.")]),t._v(" "),a("li",[a("strong",[t._v("Flow of Data")]),t._v(": Data flows through multiple functions in a pipeline.")])]),t._v(" "),a("h2",{attrs:{id:"advantages-of-functional-programming"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#advantages-of-functional-programming"}},[t._v("#")]),t._v(" Advantages of Functional Programming")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Easier Debugging and Testing")]),t._v(": Pure functions and immutability make the code more predictable and easier to test.")]),t._v(" "),a("li",[a("strong",[t._v("Modularity")]),t._v(": Encourages breaking the program into small, reusable functions.")]),t._v(" "),a("li",[a("strong",[t._v("Conciseness")]),t._v(": Often more concise and expressive.")])]),t._v(" "),a("h2",{attrs:{id:"functional-programming-techniques-in-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#functional-programming-techniques-in-javascript"}},[t._v("#")]),t._v(" Functional Programming Techniques in JavaScript")]),t._v(" "),a("h3",{attrs:{id:"_1-map-filter-and-reduce"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-map-filter-and-reduce"}},[t._v("#")]),t._v(" 1. Map, Filter, and Reduce")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Array Methods")]),t._v(": Used for transforming, selecting, and aggregating data.")]),t._v(" "),a("li",[a("strong",[t._v("Declarative")]),t._v(": More declarative and clear than traditional loops.")])]),t._v(" "),a("h3",{attrs:{id:"_2-currying"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-currying"}},[t._v("#")]),t._v(" 2. Currying")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Partial Application")]),t._v(": Transforming a function that takes multiple arguments into a sequence of functions that each take a single argument.")])]),t._v(" "),a("h3",{attrs:{id:"_3-recursion"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-recursion"}},[t._v("#")]),t._v(" 3. Recursion")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Loop Replacement")]),t._v(": Using recursive functions instead of traditional loops.")])]),t._v(" "),a("h3",{attrs:{id:"_4-functional-libraries"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-functional-libraries"}},[t._v("#")]),t._v(" 4. Functional Libraries")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Supportive Libraries")]),t._v(": Libraries like Lodash, Ramda, and Functional.js provide utility functions for more advanced functional programming.")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Functional Programming in JavaScript - Example")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Pure Function: Adds two numbers")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Higher-Order Function: Returns a function that multiplies its input by a given factor")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("multiply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("factor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" number "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" factor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Immutable Data: An array of numbers")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" numbers "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Using map (a Higher-Order Function) for Transformation")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" doubledNumbers "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("multiply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Using filter for Selection")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" evenNumbers "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Using reduce for Aggregation")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sumOfNumbers "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Function Composition: Composing map and reduce to calculate the sum of doubled numbers")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sumOfDoubledNumbers "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("multiply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Logging the results")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Original Numbers:"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Doubled Numbers:"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" doubledNumbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Even Numbers:"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" evenNumbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sum of Numbers:"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sumOfNumbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sum of Doubled Numbers:"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sumOfDoubledNumbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"conclusion-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conclusion-5"}},[t._v("#")]),t._v(" Conclusion")]),t._v(" "),a("p",[t._v("Functional programming in JavaScript offers a robust set of principles and techniques that lead to cleaner, more maintainable, and easier to understand code. It stands out for its ability to handle complex applications with simplicity and expressiveness.")]),t._v(" "),a("h2",{attrs:{id:"how-do-you-handle-errors-and-exceptions-in-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-do-you-handle-errors-and-exceptions-in-javascript"}},[t._v("#")]),t._v(" How do you handle errors and exceptions in JavaScript?")]),t._v(" "),a("h1",{attrs:{id:"error-handling-and-exceptions-in-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#error-handling-and-exceptions-in-javascript"}},[t._v("#")]),t._v(" Error Handling and Exceptions in JavaScript")]),t._v(" "),a("p",[t._v("Effective error handling is crucial in JavaScript to build robust and fault-tolerant applications. JavaScript provides mechanisms to detect, handle, and report errors through exceptions.")]),t._v(" "),a("h2",{attrs:{id:"basics-of-error-handling"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#basics-of-error-handling"}},[t._v("#")]),t._v(" Basics of Error Handling")]),t._v(" "),a("h3",{attrs:{id:"_1-try-catch-statement"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-try-catch-statement"}},[t._v("#")]),t._v(" 1. "),a("code",[t._v("try...catch")]),t._v(" Statement")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Syntax")]),t._v(":")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Code that may throw an error")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Code to handle the error")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Usage:")]),t._v(" Encapsulates code that may produce an error and allows you to handle it gracefully.")]),t._v(" "),a("h2",{attrs:{id:"_2-the-error-object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-the-error-object"}},[t._v("#")]),t._v(" 2. The Error Object")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Standard Error Types:")]),t._v(" Error, SyntaxError, TypeError, etc.")]),t._v(" "),a("li",[a("strong",[t._v("Custom Errors:")]),t._v(" Create custom error types by extending the Error class.")])]),t._v(" "),a("h2",{attrs:{id:"_3-throwing-exceptions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-throwing-exceptions"}},[t._v("#")]),t._v(" 3. Throwing Exceptions")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("throw Keyword:")]),t._v(" Used to throw an exception.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Custom Error Throwing:")]),t._v(" Throw custom error objects for better error specificity.")])])]),t._v(" "),a("h2",{attrs:{id:"advanced-error-handling"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#advanced-error-handling"}},[t._v("#")]),t._v(" Advanced Error Handling")]),t._v(" "),a("h2",{attrs:{id:"_1-finally-block"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-finally-block"}},[t._v("#")]),t._v(" 1. finally Block")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Code that may throw an error")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Code to handle the error")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Code that runs after try/catch, regardless of the outcome")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[a("strong",[t._v("Purpose:")]),t._v(" Execute code after the try and catch blocks, regardless of whether an exception was thrown.")])]),t._v(" "),a("h2",{attrs:{id:"_2-error-propagation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-error-propagation"}},[t._v("#")]),t._v(" 2. Error Propagation")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Bubbling Up:")]),t._v(" Errors can be re-thrown to higher levels for centralized error handling.")])]),t._v(" "),a("h2",{attrs:{id:"_3-asynchronous-error-handling"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-asynchronous-error-handling"}},[t._v("#")]),t._v(" 3. Asynchronous Error Handling")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("Callbacks:")]),t._v(" Handle errors in the callback function.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Promises:")]),t._v(" Use .catch() for handling rejections.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Async/Await:")]),t._v(" Combine try...catch with async functions for a cleaner approach.")])])]),t._v(" "),a("h2",{attrs:{id:"best-practices"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#best-practices"}},[t._v("#")]),t._v(" Best Practices")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("Meaningful Error Messages:")]),t._v(" Provide clear and actionable error messages.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Specific Error Types:")]),t._v(" Use specific error types to indicate distinct error conditions.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Centralized Error Handling:")]),t._v(" Implement a central error handling mechanism, especially in large applications.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Logging:")]),t._v(" Log errors for further analysis.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("User-Friendly Responses:")]),t._v(" In UI applications, ensure that errors result in user-friendly messages.")])])]),t._v(" "),a("h2",{attrs:{id:"conclusion-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conclusion-6"}},[t._v("#")]),t._v(" Conclusion")]),t._v(" "),a("p",[t._v("Proper error handling in JavaScript involves the use of try...catch blocks, understanding the Error object, and using finally for cleanup. Advanced practices include error propagation, asynchronous error handling, and implementing best practices for robust application behavior.")]),t._v(" "),a("h2",{attrs:{id:"explain-the-concept-of-event-delegation-in-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#explain-the-concept-of-event-delegation-in-javascript"}},[t._v("#")]),t._v(" Explain the concept of event delegation in JavaScript.")]),t._v(" "),a("h1",{attrs:{id:"event-delegation-in-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#event-delegation-in-javascript"}},[t._v("#")]),t._v(" Event Delegation in JavaScript")]),t._v(" "),a("p",[t._v("Event delegation is a technique in JavaScript for efficiently handling events, especially useful when multiple elements require similar event handling. It leverages the concept of event bubbling, where an event propagates up from the target element through its ancestors in the DOM tree.")]),t._v(" "),a("h2",{attrs:{id:"key-aspects-of-event-delegation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#key-aspects-of-event-delegation"}},[t._v("#")]),t._v(" Key Aspects of Event Delegation")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("Event Bubbling")]),t._v(": Events in JavaScript typically bubble up through the DOM. A click on a button, for example, will trigger click events on its parent elements up to the document root.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Single Event Listener")]),t._v(": Rather than attaching individual event listeners to each element, you attach a single event listener to a parent element. This listener manages all events from its child elements.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Determining the Target")]),t._v(": In the parent's event handler, you can identify the initiating child element using the "),a("code",[t._v("event.target")]),t._v(" property, allowing for specific logic based on the interacted element.")])])]),t._v(" "),a("h2",{attrs:{id:"advantages-of-event-delegation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#advantages-of-event-delegation"}},[t._v("#")]),t._v(" Advantages of Event Delegation")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("Performance")]),t._v(": Using one event listener on a parent element is more efficient than multiple listeners on individual elements, reducing memory usage and scripting time.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Dynamic Content Handling")]),t._v(": Event delegation simplifies handling events for elements that are dynamically added or removed, as the parent's listener automatically applies to all current and future children.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Cleaner Code")]),t._v(": Managing a single event listener for many elements results in simpler and more maintainable code.")])])]),t._v(" "),a("h2",{attrs:{id:"example-handling-clicks-in-a-list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-handling-clicks-in-a-list"}},[t._v("#")]),t._v(" Example: Handling Clicks in a List")]),t._v(" "),a("p",[t._v("Consider a list where each item needs to respond to click events:")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ul")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("myList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Item 1"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Item 2"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Item 3"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- More list items --\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ul")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("Attach a single click event listener to the "),a("code",[t._v("<ul>")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myList"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"click"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tagName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LI"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"List item clicked:"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textContent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Here, clicks on "),a("code",[t._v("<li>")]),t._v(" elements bubble up to the "),a("code",[t._v("<ul>")]),t._v(", where the event listener is triggered. The script checks if the clicked element is a list item and, if so, logs its content.")]),t._v(" "),a("h2",{attrs:{id:"conclusion-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conclusion-7"}},[t._v("#")]),t._v(" Conclusion")]),t._v(" "),a("p",[t._v("Event delegation is a vital technique for efficient event handling in JavaScript, particularly beneficial for dynamic content and when managing similar child elements with common event logic.")]),t._v(" "),a("h2",{attrs:{id:"how-do-you-handle-cross-origin-resource-sharing-cors-in-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-do-you-handle-cross-origin-resource-sharing-cors-in-javascript"}},[t._v("#")]),t._v(" How do you handle cross-origin resource sharing (CORS) in JavaScript?")]),t._v(" "),a("p",[t._v("Describe the usage of closures in JavaScript for private variables and\nencapsulation. ## What are the differences between arrow functions and regular\nfunctions in JavaScript? ## Explain the concept of promises in JavaScript and\nhow they are used for asynchronous programming. ## How do you handle AJAX\nrequests in JavaScript? Provide examples of different approaches. ## What is the\ndifference between function declaration and function expression in JavaScript?")]),t._v(" "),a("h1",{attrs:{id:"handling-cross-origin-resource-sharing-cors-in-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#handling-cross-origin-resource-sharing-cors-in-javascript"}},[t._v("#")]),t._v(" Handling Cross-Origin Resource Sharing (CORS) in JavaScript")]),t._v(" "),a("p",[t._v("Cross-Origin Resource Sharing (CORS) is a security feature in web browsers that restricts web pages from making requests to a different domain. Managing CORS involves both server-side and client-side configurations.")]),t._v(" "),a("h2",{attrs:{id:"server-side-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#server-side-configuration"}},[t._v("#")]),t._v(" Server-Side Configuration")]),t._v(" "),a("p",[t._v("Properly configuring the server to send the appropriate CORS headers is crucial:")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("Access-Control-Allow-Origin")]),t._v(": Specifies which domains can access the resources. Set to a specific domain or "),a("code",[t._v("*")]),t._v(" (for all, but not recommended for sensitive resources).")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Access-Control-Allow-Methods")]),t._v(": Lists the allowed methods (GET, POST, PUT, etc.).")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Access-Control-Allow-Headers")]),t._v(": Indicates which HTTP headers are allowed.")])])]),t._v(" "),a("h3",{attrs:{id:"example-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-2"}},[t._v("#")]),t._v(" Example")]),t._v(" "),a("p",[t._v("For a REST API at "),a("code",[t._v("https://api.example.com")]),t._v(" and a web app at "),a("code",[t._v("https://web.example.com")]),t._v(", the server should include:")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token header"}},[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Access-Control-Allow-Origin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("https://web.example.com")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token header"}},[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Access-Control-Allow-Methods")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("GET, POST")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token header"}},[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Access-Control-Allow-Headers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("Content-Type")])]),t._v("\n\n")])])]),a("h2",{attrs:{id:"handling-preflight-requests"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#handling-preflight-requests"}},[t._v("#")]),t._v(" Handling Preflight Requests")]),t._v(" "),a("p",[t._v("Browsers send a preflight request (OPTIONS method) before the actual request in some cases. The server must handle these correctly.")]),t._v(" "),a("h2",{attrs:{id:"client-side-handling"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#client-side-handling"}},[t._v("#")]),t._v(" Client-Side Handling")]),t._v(" "),a("p",[t._v("On the client-side, handling CORS involves:")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("Handling CORS Errors:")]),t._v(" JavaScript should be prepared for exceptions or rejections due to CORS.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Setting Custom Headers:")]),t._v(" Use "),a("code",[t._v("XMLHttpRequest")]),t._v(" or Fetch API for custom headers, ensuring the server responds with "),a("code",[t._v("Access-Control-Allow-Headers")]),t._v(".")])])]),t._v(" "),a("p",[t._v("Example")]),t._v(" "),a("ul",[a("li",[t._v("Using Fetch API with custom headers:")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://api.example.com/data"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("method")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GET"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("headers")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"Content-Type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"application/json"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("response")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("json")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CORS Error:"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"using-proxies"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-proxies"}},[t._v("#")]),t._v(" Using Proxies")]),t._v(" "),a("ul",[a("li",[t._v("During development, a proxy server can be used to circumvent CORS issues. This server requests data from the target server and forwards it to the client.")])]),t._v(" "),a("h2",{attrs:{id:"conclusion-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conclusion-8"}},[t._v("#")]),t._v(" Conclusion")]),t._v(" "),a("ul",[a("li",[t._v("Handling CORS is about configuring the server to send the right headers and preparing the client-side for appropriate requests and error handling. Proxies can be used in development to bypass CORS restrictions.")])]),t._v(" "),a("h2",{attrs:{id:"describe-the-usage-of-the-this-keyword-in-javascript-how-do-you-handle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#describe-the-usage-of-the-this-keyword-in-javascript-how-do-you-handle"}},[t._v("#")]),t._v(" Describe the usage of the this keyword in JavaScript. ## How do you handle")]),t._v(" "),a("p",[t._v("The this keyword in JavaScript is a special identifier keyword that is automatically defined in the scope of every function and refers to the object it belongs to. It has different values depending on where it is used:")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("In a Method:")]),t._v(" Inside a method, this refers to the owner object.")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Example"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getName")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "Example"')]),t._v("\n")])])]),a("ul",[a("li",[a("strong",[t._v("Alone:")]),t._v(" When used alone, "),a("code",[t._v("this")]),t._v(" refers to the global object. In a browser, this is usually the "),a("code",[t._v("window")]),t._v(" object. In Node.js, it refers to the "),a("code",[t._v("global")]),t._v(" object.")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("showThis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("showThis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Window in browsers, global in Node.js")]),t._v("\n")])])]),a("ul",[a("li",[a("strong",[t._v("In a Function:")]),t._v(" In a regular function, "),a("code",[t._v("this")]),t._v(" refers to the global object. However, in strict mode ('"),a("code",[t._v("use strict")]),t._v("'😉, "),a("code",[t._v("this")]),t._v(" is "),a("code",[t._v("undefined")]),t._v(".")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exampleFunction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exampleFunction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n")])])]),a("ul",[a("li",[a("strong",[t._v("In an Event Handler:")]),t._v(" Inside an event handler, "),a("code",[t._v("this")]),t._v(" refers to the element that received the event.")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myBtn"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclick")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Refers to the element with id "myBtn"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[a("strong",[t._v("With new Keyword:")]),t._v(" When a function is used as a constructor (with the new keyword), "),a("code",[t._v("this")]),t._v(" refers to the newly created object.")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" person "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"John"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "John"')]),t._v("\n")])])]),a("ul",[a("li",[a("strong",[t._v("Explicit Binding:")]),t._v(" Using "),a("code",[t._v("call()")]),t._v(", "),a("code",[t._v("apply()")]),t._v(", or "),a("code",[t._v("bind()")]),t._v(", you can set this to point to any object you choose.")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("showName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Alex"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("showName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "Alex"')]),t._v("\n")])])]),a("h2",{attrs:{id:"handling-this"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#handling-this"}},[t._v("#")]),t._v(" Handling this")]),t._v(" "),a("p",[t._v("The value of "),a("code",[t._v("this")]),t._v(" can sometimes lead to confusion, especially in nested functions or callbacks. To handle it:")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Arrow Functions:")]),t._v(" In ES6, arrow functions do not have their own "),a("code",[t._v("this")]),t._v(". They inherit "),a("code",[t._v("this")]),t._v(" from the parent scope. This is particularly useful in callbacks.")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Timer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("seconds "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInterval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("seconds"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("seconds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" timer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Timer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Logs 1, 2, 3, ... every second")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[a("code",[t._v("Bind")]),t._v(", "),a("code",[t._v("Call")]),t._v(", and "),a("code",[t._v("Apply")]),t._v(": These methods can explicitly set the value of this.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Assign this to Another Variable:")]),t._v(" Common in older JavaScript code, you might see "),a("code",[t._v("this")]),t._v(" assigned to a variable like "),a("code",[t._v("self")]),t._v(" or "),a("code",[t._v("that")]),t._v(", which can then be used in nested functions or callbacks.")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("example")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" self "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Refers to the same object as "this" in the outer function')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("The "),a("code",[t._v("this")]),t._v(" keyword is a fundamental aspect of JavaScript and understanding its behavior in different contexts is crucial for effective JavaScript programming.")]),t._v(" "),a("h2",{attrs:{id:"what-are-the-differences-between-the-apply-call-and-bind-methods-in"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-are-the-differences-between-the-apply-call-and-bind-methods-in"}},[t._v("#")]),t._v(" What are the differences between the apply(), call(), and bind() methods in")]),t._v(" "),a("p",[t._v("In JavaScript, "),a("code",[t._v("apply()")]),t._v(", "),a("code",[t._v("call()")]),t._v(", and "),a("code",[t._v("bind()")]),t._v(" are all methods that can be used to set the "),a("code",[t._v("this")]),t._v(" context of a function. They are similar in their purpose but differ in how they are used and how they handle arguments. Here are the key differences:")]),t._v(" "),a("h2",{attrs:{id:"apply"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#apply"}},[t._v("#")]),t._v(" apply()")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("Usage:")]),t._v(" func.apply(thisArg, [argsArray])")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Purpose:")]),t._v(" Invokes the function func with a given "),a("code",[t._v("this")]),t._v(" value ("),a("code",[t._v("thisArg")]),t._v(") and arguments provided as an array (or an array-like object).")])])]),t._v(" "),a("p",[t._v("Example")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("greet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("subject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" adjective")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Hello ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(", you are ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("adjective"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" at ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("subject"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Alice"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("greet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"JavaScript"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"amazing"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "Hello Alice, you are amazing at JavaScript."')]),t._v("\n")])])]),a("h2",{attrs:{id:"call"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#call"}},[t._v("#")]),t._v(" call()")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("Usage:")]),t._v(" func.call(thisArg, arg1, arg2, ...)")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Purpose:")]),t._v(" Similar to "),a("code",[t._v("apply()")]),t._v(", but arguments are provided individually, not as an array.")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("greet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("subject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" adjective")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Hello ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(", you are ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("adjective"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" at ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("subject"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Alice"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("greet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"JavaScript"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"amazing"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "Hello Alice, you are amazing at JavaScript."')]),t._v("\n")])])]),a("h2",{attrs:{id:"bind"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bind"}},[t._v("#")]),t._v(" bind()")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("Usage:")]),t._v(" const boundFunc = func.bind(thisArg[, arg1[, arg2[, ...]]])")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Purpose:")]),t._v(" Creates a new function that, when called, has its this keyword set to the provided value ("),a("code",[t._v("thisArg")]),t._v("). Any given arguments (arg1, arg2, ...) are prepended to arguments provided to the bound function when it's called.")])])]),t._v(" "),a("p",[t._v("Example")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("greet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("subject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" adjective")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Hello ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(", you are ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("adjective"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" at ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("subject"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Alice"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" boundGreet "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("greet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"JavaScript"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("boundGreet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"amazing"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "Hello Alice, you are amazing at JavaScript."')]),t._v("\n")])])]),a("h2",{attrs:{id:"key-differences-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#key-differences-2"}},[t._v("#")]),t._v(" Key Differences:")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("Function Invocation:")]),t._v(" "),a("code",[t._v("apply()")]),t._v(" and "),a("code",[t._v("call()")]),t._v(" invoke the function immediately with the specified "),a("code",[t._v("this")]),t._v(" value and arguments. "),a("code",[t._v("bind()")]),t._v(", however, returns a new function that can be invoked later.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Arguments Handling:")]),t._v(" "),a("code",[t._v("apply()")]),t._v(" accepts an array of arguments, making it ideal for when you don't know the number of arguments in advance. "),a("code",[t._v("call()")]),t._v(" requires the arguments to be listed explicitly.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Use Case for bind():")]),t._v(" "),a("code",[t._v("bind()")]),t._v(" is often used when you need a function with a particular this value in a callback or an event handler, where you don't want to invoke the function immediately but rather at a later point in time.")])])]),t._v(" "),a("p",[t._v("Understanding these methods is crucial for controlling the execution context of functions in JavaScript, especially in scenarios involving object methods and callbacks.")]),t._v(" "),a("p",[t._v("Understanding these methods is crucial for controlling the execution context of functions in JavaScript, especially in scenarios involving object methods and callbacks.")]),t._v(" "),a("h1",{attrs:{id:"explain-the-concept-of-the-event-loop-in-node-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#explain-the-concept-of-the-event-loop-in-node-js"}},[t._v("#")]),t._v(" Explain the Concept of the Event Loop in Node.js")]),t._v(" "),a("p",[t._v("Node.js is designed with a non-blocking, asynchronous architecture, facilitated by the event loop. Despite JavaScript's single-threaded nature, this design enables Node.js to perform non-blocking I/O operations.")]),t._v(" "),a("h2",{attrs:{id:"how-the-event-loop-works"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-the-event-loop-works"}},[t._v("#")]),t._v(" How the Event Loop Works")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("Call Stack")]),t._v(": Synchronous code is executed here. Functions are added to the stack when called and removed upon completion.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Node.js APIs")]),t._v(": Asynchronous operations in Node's standard library, when called, execute in the background. Their callbacks are placed in a queue upon completion.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Event Queue")]),t._v(": Callbacks wait here to be executed, moving forward only if the call stack is empty.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Event Loop")]),t._v(": Continuously checks the event queue. If the call stack is empty and there are callbacks in the queue, it moves the first callback onto the call stack to be executed.")])])]),t._v(" "),a("h2",{attrs:{id:"phases-of-the-event-loop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#phases-of-the-event-loop"}},[t._v("#")]),t._v(" Phases of the Event Loop")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("Timers")]),t._v(": Executes "),a("code",[t._v("setTimeout()")]),t._v(" and "),a("code",[t._v("setInterval()")]),t._v(" callbacks.")]),t._v(" "),a("li",[a("strong",[t._v("I/O Callbacks")]),t._v(": Executes most callbacks, except for close callbacks, timers, and "),a("code",[t._v("setImmediate()")]),t._v(".")]),t._v(" "),a("li",[a("strong",[t._v("Idle, Prepare")]),t._v(": Used internally.")]),t._v(" "),a("li",[a("strong",[t._v("Poll")]),t._v(": Retrieves new I/O events; executes related callbacks.")]),t._v(" "),a("li",[a("strong",[t._v("Check")]),t._v(": "),a("code",[t._v("setImmediate()")]),t._v(" callbacks are executed here.")]),t._v(" "),a("li",[a("strong",[t._v("Close Callbacks")]),t._v(": For example, "),a("code",[t._v("socket.on('close', ...)")]),t._v(".")])]),t._v(" "),a("h2",{attrs:{id:"importance-of-the-event-loop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#importance-of-the-event-loop"}},[t._v("#")]),t._v(" Importance of the Event Loop")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Non-blocking")]),t._v(": Enables non-blocking I/O operations in a single-threaded environment.")]),t._v(" "),a("li",[a("strong",[t._v("Scalability")]),t._v(": Provides a scalable solution for handling a large number of concurrent operations, especially for I/O-bound tasks.")]),t._v(" "),a("li",[a("strong",[t._v("Efficiency")]),t._v(": Ideal for real-time applications like chat services and online games.")])]),t._v(" "),a("p",[t._v("Understanding the event loop is essential for Node.js development, as it guides the creation of efficient, non-blocking code and helps avoid common issues such as blocking the event loop.")]),t._v(" "),a("p",[t._v("handle memory management in JavaScript? ##Describe the usage of the spread\nsyntax (...) in JavaScript. ## What are the differences between the slice() and\nsplice() methods in JavaScript? ## Explain the concept of event-driven\narchitecture in JavaScript applications. ## How do you handle\ninternationalization (i18n) in JavaScript applications? ## Describe the usage of\nthe reduce() method in JavaScript. ##What are the differences between ECMAScript")]),t._v(" "),a("h1",{attrs:{id:"questions-1-diff-between-let-and-const-var-scope-defination-decleration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#questions-1-diff-between-let-and-const-var-scope-defination-decleration"}},[t._v("#")]),t._v(" Questions 1. Diff between let and const, var - scope, defination, decleration?")]),t._v(" "),a("h1",{attrs:{id:"understanding-var-let-and-const-in-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#understanding-var-let-and-const-in-javascript"}},[t._v("#")]),t._v(" Understanding var, let, and const in JavaScript")]),t._v(" "),a("p",[t._v("JavaScript provides three ways to declare variables, each with its own nuances and use cases: "),a("code",[t._v("var")]),t._v(", "),a("code",[t._v("let")]),t._v(", and "),a("code",[t._v("const")]),t._v(". Understanding their differences is crucial for writing clear and effective JavaScript code.")]),t._v(" "),a("h2",{attrs:{id:"var-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#var-2"}},[t._v("#")]),t._v(" var")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("Scope")]),t._v(": "),a("code",[t._v("var")]),t._v(" is function-scoped. It is accessible anywhere within the function it is declared in, or globally if declared outside of a function.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Hoisting")]),t._v(": Variables declared with "),a("code",[t._v("var")]),t._v(" are hoisted to the top of their scope. This means that they can be accessed before their line of declaration in the code, but they will be "),a("code",[t._v("undefined")]),t._v(" until their line of code execution.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Redefinition and Reassignment")]),t._v(":")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("var")]),t._v(" allows both redeclaration and reassignment. This can lead to potential bugs, as variables can be accidentally redeclared within the same scope.")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Example")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" exampleVar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I am Var"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exampleVar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Outputs: "I am Var"')]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"let-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#let-2"}},[t._v("#")]),t._v(" let")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("Scope")]),t._v(": "),a("code",[t._v("let")]),t._v(" is block-scoped, meaning it is only accessible within the block ("),a("code",[t._v("{}")]),t._v(") where it is declared.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Hoisting")]),t._v(": Like "),a("code",[t._v("var")]),t._v(", "),a("code",[t._v("let")]),t._v(" declarations are hoisted to the top of their scope but not initialized. Accessing them before their declaration results in a ReferenceError.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Redefinition and Reassignment")]),t._v(":")]),t._v(" "),a("ul",[a("li",[t._v("You can reassign but cannot redeclare "),a("code",[t._v("let")]),t._v(" variables within the same scope.")]),t._v(" "),a("li",[t._v("This reduces the risk of bugs compared to "),a("code",[t._v("var")]),t._v(".")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Example")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" exampleLet "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I am Let"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exampleLet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Accessible within the block")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(exampleLet); // ReferenceError outside the block")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"const-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#const-2"}},[t._v("#")]),t._v(" const")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("Scope")]),t._v(": "),a("code",[t._v("const")]),t._v(" is also block-scoped, similar to "),a("code",[t._v("let")]),t._v(".")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Hoisting")]),t._v(": "),a("code",[t._v("const")]),t._v(" declarations, like "),a("code",[t._v("let")]),t._v(", are hoisted but are not initialized, resulting in a ReferenceError if accessed before declaration.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Redefinition and Reassignment")]),t._v(":")]),t._v(" "),a("ul",[a("li",[t._v("Variables declared with "),a("code",[t._v("const")]),t._v(" cannot be reassigned or redeclared.")]),t._v(" "),a("li",[t._v("However, if the variable is an object or array, its properties or elements can be modified.")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Initialization Requirement")]),t._v(": "),a("code",[t._v("const")]),t._v(" requires that variables be initialized at the time of declaration.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Example")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" exampleConst "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I am Const"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exampleConst"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Accessible within the block")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(exampleConst); // ReferenceError outside the block")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"summary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#summary"}},[t._v("#")]),t._v(" Summary")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("var")]),t._v(": Function-scoped, allows redeclaration and reassignment, hoisted as undefined.")]),t._v(" "),a("li",[a("strong",[t._v("let")]),t._v(": Block-scoped, allows reassignment but not redeclaration, hoisted but not initialized.")]),t._v(" "),a("li",[a("strong",[t._v("const")]),t._v(": Block-scoped, neither allows reassignment nor redeclaration, requires initialization, hoisted but not initialized.")])]),t._v(" "),a("p",[t._v("This Markdown document provides a comprehensive comparison of var, let, and const in JavaScript, focusing on their scope, hoisting behavior, redefinition, and reassignment rules, with examples to illustrate each point.")]),t._v(" "),a("h1",{attrs:{id:"understanding-promises-and-async-await-in-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#understanding-promises-and-async-await-in-javascript"}},[t._v("#")]),t._v(" Understanding Promises and Async/Await in JavaScript")]),t._v(" "),a("p",[t._v("JavaScript's approach to asynchronous programming includes Promises and the "),a("code",[t._v("async")]),t._v("/"),a("code",[t._v("await")]),t._v(" syntax. Understanding these concepts is crucial for handling asynchronous operations effectively.")]),t._v(" "),a("h2",{attrs:{id:"what-is-a-promise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-a-promise"}},[t._v("#")]),t._v(" What is a Promise?")]),t._v(" "),a("p",[t._v("A Promise is an object that represents the eventual completion or failure of an asynchronous operation.")]),t._v(" "),a("h3",{attrs:{id:"key-characteristics-of-promises"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#key-characteristics-of-promises"}},[t._v("#")]),t._v(" Key Characteristics of Promises")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("States")]),t._v(":")]),t._v(" "),a("ul",[a("li",[a("em",[t._v("Pending")]),t._v(": Initial state, neither fulfilled nor rejected.")]),t._v(" "),a("li",[a("em",[t._v("Fulfilled")]),t._v(": Operation completed successfully.")]),t._v(" "),a("li",[a("em",[t._v("Rejected")]),t._v(": Operation failed.")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Usage")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myPromise "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Asynchronous operation code")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* operation successful */")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Handling Responses:")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v(".then()")]),t._v(" for handling fulfilled states.")]),t._v(" "),a("li",[a("strong",[t._v(".catch()")]),t._v(" for handling rejections.")]),t._v(" "),a("li",[a("strong",[t._v(".finally()")]),t._v(" for code that should run regardless of the outcome.")])])])]),t._v(" "),a("h2",{attrs:{id:"what-is-async-await"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-async-await"}},[t._v("#")]),t._v(" What is Async/Await?")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("async/await")]),t._v(" is syntactic sugar built on top of Promises, making asynchronous code easier to write and read.")])]),t._v(" "),a("h2",{attrs:{id:"key-characteristics-of-async-await"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#key-characteristics-of-async-await"}},[t._v("#")]),t._v(" Key Characteristics of Async/Await")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Async Function:")]),t._v(" "),a("ul",[a("li",[t._v("Declared with the async keyword.")]),t._v(" "),a("li",[t._v("Always returns a Promise.")]),t._v(" "),a("li",[t._v("Example")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetchData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// code")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[a("strong",[t._v("Await Operator:")]),t._v(" "),a("ul",[a("li",[t._v("Pauses the async function execution until the Promise settles.")]),t._v(" "),a("li",[t._v("Example:")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetchData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("someAsyncOperation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Executes after Promise resolution")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"differences-between-promises-and-async-await"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#differences-between-promises-and-async-await"}},[t._v("#")]),t._v(" Differences Between Promises and Async/Await")]),t._v(" "),a("h1",{attrs:{id:"differences-between-promises-and-async-await-in-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#differences-between-promises-and-async-await-in-javascript"}},[t._v("#")]),t._v(" Differences Between Promises and Async/Await in JavaScript")]),t._v(" "),a("p",[t._v("In JavaScript, both Promises and async/await are used for asynchronous programming, but they differ in syntax and handling of asynchronous operations.")]),t._v(" "),a("h2",{attrs:{id:"promises"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promises"}},[t._v("#")]),t._v(" Promises")]),t._v(" "),a("p",[t._v("Promises represent a future value, i.e., a value that might eventually be returned from some asynchronous operation.")]),t._v(" "),a("h3",{attrs:{id:"characteristics"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#characteristics"}},[t._v("#")]),t._v(" Characteristics")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("Constructor Syntax")]),t._v(": Created using the "),a("code",[t._v("new Promise()")]),t._v(" constructor.")]),t._v(" "),a("li",[a("strong",[t._v("Thenable")]),t._v(": They use "),a("code",[t._v(".then()")]),t._v(" for handling fulfilled states and "),a("code",[t._v(".catch()")]),t._v(" for handling errors.")]),t._v(" "),a("li",[a("strong",[t._v("Chaining")]),t._v(": Allows chaining of "),a("code",[t._v(".then()")]),t._v(" calls for sequential asynchronous operations.")]),t._v(" "),a("li",[a("strong",[t._v("Error Handling")]),t._v(": Errors are handled in the "),a("code",[t._v(".catch()")]),t._v(" block.")]),t._v(" "),a("li",[a("strong",[t._v("Explicit State Management")]),t._v(": You need to explicitly resolve or reject a promise.")])]),t._v(" "),a("h3",{attrs:{id:"example-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-3"}},[t._v("#")]),t._v(" Example")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetchData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// asynchronous code")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* success condition */")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Error message'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetchData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("error")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"async-await"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#async-await"}},[t._v("#")]),t._v(" Async/Await")]),t._v(" "),a("p",[t._v("Async/await is syntactic sugar built on top of Promises. It allows for writing asynchronous code that looks and behaves like synchronous code.")]),t._v(" "),a("h3",{attrs:{id:"characteristics-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#characteristics-2"}},[t._v("#")]),t._v(" Characteristics")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("Function Prefix")]),t._v(": "),a("code",[t._v("async")]),t._v(" is used to declare an asynchronous function, which then allows the use of "),a("code",[t._v("await")]),t._v(" within it.")]),t._v(" "),a("li",[a("strong",[t._v("Await for Resolution")]),t._v(": "),a("code",[t._v("await")]),t._v(" is used to wait for the Promise to be resolved or rejected.")]),t._v(" "),a("li",[a("strong",[t._v("Error Handling")]),t._v(": Errors are typically handled using "),a("code",[t._v("try...catch")]),t._v(" blocks.")]),t._v(" "),a("li",[a("strong",[t._v("Cleaner Syntax")]),t._v(": Offers a cleaner, more readable syntax compared to chaining promises.")]),t._v(" "),a("li",[a("strong",[t._v("Implicit Promise Return")]),t._v(": An async function always returns a Promise.")])]),t._v(" "),a("h3",{attrs:{id:"example-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-4"}},[t._v("#")]),t._v(" Example")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetchData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("someAsyncOperation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetchData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"key-differences-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#key-differences-3"}},[t._v("#")]),t._v(" Key Differences")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("Syntax")]),t._v(": Async/await offers a more synchronous-looking code style, which can be easier to read and write, compared to the chainable methods "),a("code",[t._v(".then()")]),t._v(" and "),a("code",[t._v(".catch()")]),t._v(" of promises.")]),t._v(" "),a("li",[a("strong",[t._v("Error Handling")]),t._v(": Async/await uses traditional "),a("code",[t._v("try...catch")]),t._v(" blocks, which is familiar to many developers, whereas Promises require "),a("code",[t._v(".catch()")]),t._v(" or "),a("code",[t._v(".then(null, errorHandler)")]),t._v(".")]),t._v(" "),a("li",[a("strong",[t._v("Return Values")]),t._v(": In async functions, you can directly return values like in synchronous functions, but with Promises, you need to resolve with values.")]),t._v(" "),a("li",[a("strong",[t._v("Debugging")]),t._v(": Debugging can be more straightforward with async/await since it allows for standard debugging techniques like breakpoints, which can be more challenging with Promise chains.")])]),t._v(" "),a("p",[t._v("Both methods are powerful for handling asynchronous operations in JavaScript, and understanding both is crucial for modern JavaScript development. The choice between them often depends on personal preference, the specific requirements of the task, and readability considerations.")]),t._v(" "),a("h1",{attrs:{id:"javascript-event-handling-capture-bubbling-and-methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-event-handling-capture-bubbling-and-methods"}},[t._v("#")]),t._v(" JavaScript Event Handling: Capture, Bubbling, and Methods")]),t._v(" "),a("p",[t._v("JavaScript events play a crucial role in dynamic web applications. Understanding event capture, event bubbling, and various event methods is essential for effective event handling.")]),t._v(" "),a("h2",{attrs:{id:"event-capture"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#event-capture"}},[t._v("#")]),t._v(" Event Capture")]),t._v(" "),a("p",[t._v("Event capturing is one phase of the event flow process in the DOM. During this phase, an event propagates from the window down to the target element.")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("Flow")]),t._v(": Events start at the top of the DOM tree and propagate down to the target element.")]),t._v(" "),a("li",[a("strong",[t._v("Usage")]),t._v(": Less commonly used, but it can be enabled by setting the third parameter of "),a("code",[t._v("addEventListener")]),t._v(" to "),a("code",[t._v("true")]),t._v(".")])]),t._v(" "),a("h2",{attrs:{id:"event-bubbling"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#event-bubbling"}},[t._v("#")]),t._v(" Event Bubbling")]),t._v(" "),a("p",[t._v("Event bubbling is the process where an event starts from the specific target element and bubbles up through its ancestors in the DOM tree.")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("Flow")]),t._v(": Events propagate from the target element up to the top of the DOM tree.")]),t._v(" "),a("li",[a("strong",[t._v("Default Behavior")]),t._v(": Most events in the DOM use event bubbling.")])]),t._v(" "),a("h2",{attrs:{id:"event-preventdefault"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#event-preventdefault"}},[t._v("#")]),t._v(" event.preventDefault()")]),t._v(" "),a("p",[t._v("This method is used to prevent the browser's default action for a particular event.")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("Usage")]),t._v(": Commonly used in form submission to prevent page reload, or in anchor tags to prevent navigating to a URL.")]),t._v(" "),a("li",[a("strong",[t._v("Example")]),t._v(": "),a("code",[t._v("event.preventDefault();")])])]),t._v(" "),a("h2",{attrs:{id:"stoppropagation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stoppropagation"}},[t._v("#")]),t._v(" stopPropagation()")]),t._v(" "),a("p",[t._v("This method is used to stop the event from propagating further in the event flow (either in capturing or bubbling phase).")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("Usage")]),t._v(": Prevents the event from bubbling up or capturing down to parent elements.")]),t._v(" "),a("li",[a("strong",[t._v("Example")]),t._v(": "),a("code",[t._v("event.stopPropagation();")])])]),t._v(" "),a("h2",{attrs:{id:"stopimmediatepropagation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stopimmediatepropagation"}},[t._v("#")]),t._v(" stopImmediatePropagation()")]),t._v(" "),a("p",[t._v("This method stops the event from propagating to the next listeners in line after the current one.")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("Usage")]),t._v(": Not only does it stop the event from traveling up or down the DOM tree, but it also prevents other event listeners on the same element from being called.")]),t._v(" "),a("li",[a("strong",[t._v("Example")]),t._v(": "),a("code",[t._v("event.stopImmediatePropagation();")])])]),t._v(" "),a("p",[t._v("Understanding these concepts and methods is vital for handling events effectively in JavaScript, particularly in complex applications with multiple interactive elements.")]),t._v(" "),a("h1",{attrs:{id:"javascript-event-handling-with-html-examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-event-handling-with-html-examples"}},[t._v("#")]),t._v(" JavaScript Event Handling with HTML Examples")]),t._v(" "),a("p",[t._v("This document includes examples of JavaScript Event Capture, Event Bubbling, and various event methods along with their corresponding HTML structures, explained with comments.")]),t._v(" "),a("h2",{attrs:{id:"event-capture-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#event-capture-example"}},[t._v("#")]),t._v(" Event Capture Example")]),t._v(" "),a("p",[t._v("HTML Structure:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \x3c!-- Parent Div Element --\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"parent"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \x3c!-- Child Button Element --\x3e")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"child"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Click me"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \x3c!-- in js --\x3e")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Adding an event listener to the parent div for event capture")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'parent'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Captured on parent'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The third parameter 'true' enables capturing phase")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Adding an event listener to the child button")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Target button clicked'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/////////////////////////////////")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Event Bubbling Example")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HTML: (Same as above)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// JavaScript:")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Event listener on the parent div for event bubbling")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'parent'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Bubbled to parent'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// By default, the event listener is set for the bubbling phase")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Event listener on the child button")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Target button clicked'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///////////////////////////////")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// event.preventDefault() Example")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HTML Structure:")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \x3c!-- Link Element --\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("a href"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://example.com"')]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myLink"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Go to Example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Prevent default action of the link")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myLink'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("preventDefault")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Prevents the default action of going to the link")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Link click prevented'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///////////////////////////////////////")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// stopPropagation() Example")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HTML: (Same as the first example)")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Event listener on the parent div")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'parent'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This will not be logged if child is clicked'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Event listener on the child button to stop propagation")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stopPropagation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Stops the event from bubbling up to the parent")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Child clicked, propagation stopped'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("////////////////////////////////////////////")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// stopImmediatePropagation() Example")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HTML: (Same as the first example)")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// First event listener on the child button")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This will be logged only if stopImmediatePropagation is not called'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Second event listener on the child button")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stopImmediatePropagation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Stops any further propagation of the current event")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Child clicked, no further listeners will be called'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n\n\n")])])]),a("h1",{attrs:{id:"debouncing-and-throttling-in-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#debouncing-and-throttling-in-javascript"}},[t._v("#")]),t._v(" Debouncing and Throttling in JavaScript")]),t._v(" "),a("p",[t._v("Debouncing and throttling are two techniques in JavaScript used to control how many times a function can execute over time, enhancing performance in event handling.")]),t._v(" "),a("h2",{attrs:{id:"debouncing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#debouncing"}},[t._v("#")]),t._v(" Debouncing")]),t._v(" "),a("p",[t._v("Debouncing is a technique that delays the execution of a function until after a specified wait time has elapsed since the last time it was invoked. It groups several function calls into a single call.")]),t._v(" "),a("h3",{attrs:{id:"characteristics-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#characteristics-3"}},[t._v("#")]),t._v(" Characteristics")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("Delayed Execution")]),t._v(": Executes the function after a period of inactivity.")]),t._v(" "),a("li",[a("strong",[t._v("Use Cases")]),t._v(": Useful for handling search bar inputs or window resizing.")]),t._v(" "),a("li",[a("strong",[t._v("Prevents Rapid Calls")]),t._v(": Avoids unnecessary and expensive operations that don't need continuous execution.")])]),t._v(" "),a("h3",{attrs:{id:"example-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-5"}},[t._v("#")]),t._v(" Example")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("debounce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("func"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" delay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" debounceTimer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" context "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("debounceTimer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    debounceTimer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" delay"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Usage: Debouncing a search input function")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" handleSearch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("debounce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Search operation")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18.19")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" Anync vs defr "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20.")]),t._v(" Arrow "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" vs normal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21.")]),t._v(" What is Housting "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22.")]),t._v(" Spread vs Createobject defference "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23.")]),t._v(" Global Execution context "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24.")]),t._v(" Shallow\ncopy and Deep copy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25.")]),t._v(" Week map and week "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("26.")]),t._v(" Diffreence between map and\nobject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27.")]),t._v(" service worker "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("28.")]),t._v(" Tamporary Dead Zone "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TDZ")]),t._v(" is the time between the\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" variable was hoisted till it is initilize some value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" when ever we "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" to\naccess a variable "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TDZ")]),t._v(" we recive an error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Let and "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" are "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TDZ")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("29.")]),t._v(" call"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nbind"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" apply "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30.")]),t._v(" ## SyntaxError vs ReferenceError vs TypeError "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" ReferenceError "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" when "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" to a variable before we initilize it "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" SyntaxError "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Re"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("declear a\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" variable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x has already been declared and "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" without initilation "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" TypeError "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Assignment to constant variable "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23.")]),t._v(" ## "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BLOCK")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SCOPE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Laxical\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Environment "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Is defined by "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" cully bracess "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" its combine multiple js statement\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" one group "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" # Laxical Environment "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Laxical env is local memory along "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" laxical Env "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" its parents"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" it's a hairarkey or chain "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" scope "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24.")]),t._v(" Shadowing "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" js "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" we have same name variable outside the block then block variable will\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" replace global variable value # Questions"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.")]),t._v(" What is the difference between\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" and "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" #javascript"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" Lets find out # "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" It means empty or a\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" value which never existed and means nothing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" is an object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// object Code: let a=null console. log(a) //null # undefined:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" It means a variable is defined but its value is never initialized"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" is "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" type "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Code"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined # When to use null object? # When you")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" have declared an object and want it to be empty initialise it "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" # Can\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" we assign "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" to variable"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" You can assign "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" to any variable but\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" generally its not recommended"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" If you want to explicitly make any object not\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" available use "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" instead "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" Javascript has provided "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" keyword "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the same\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" purpose"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" Undefined is assigned by javascript when you forget to initialise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Higher Order Functions "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Event bubbling "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" When an event happens on an element"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" it first runs the handlers on it"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" then on its parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" then all the way up on\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" other ancestors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Closures "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Function currying "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Event Loop "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Promises"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" async\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" and "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" differences "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" De"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("bouncing technique "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" call"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" apply"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bind methods and\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" their use cases "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Advantages and disadvantages "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SSR")]),t._v(" over "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSR")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Given an array\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" find the second largest and second smallest number "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" How to create custom\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" elements "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Ways to stop redirection "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Difference between "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("V")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v(" and Shadow\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ES6")]),t._v(" concepts — Scope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Destructuring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" spread and rest operators"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" WeakSet "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Difference between the regular functions and arrow functions "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" examples and\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" use "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" What is Webpack and babel "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Sequence "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" logs and why"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OOPS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" PolyMorphism "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Extend vs Implement keyword "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Hashing vs Encryption # Problems"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" Double the items "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" an array using polyfill functions "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" Count frequency "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v("\n   characters "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" a string and alpha numeric # Problem solution\n\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);