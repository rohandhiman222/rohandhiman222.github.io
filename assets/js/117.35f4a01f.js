(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{402:function(t,a,e){"use strict";e.r(a);var s=e(14),n=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"virtual-dom-in-reactjs-a-concise-explanation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#virtual-dom-in-reactjs-a-concise-explanation"}},[t._v("#")]),t._v(" Virtual DOM in ReactJS: A Concise Explanation")]),t._v(" "),a("p",[t._v("The Virtual DOM is a core concept in ReactJS that optimizes the performance and efficiency of web applications. Here’s a concise and clear explanation of the Virtual DOM.")]),t._v(" "),a("h2",{attrs:{id:"what-is-the-virtual-dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-the-virtual-dom"}},[t._v("#")]),t._v(" What is the Virtual DOM?")]),t._v(" "),a("p",[t._v("The Virtual DOM (VDOM) is an in-memory representation of the actual DOM elements generated by React components. It acts as a lightweight copy of the real DOM, allowing React to manage updates efficiently.")]),t._v(" "),a("h2",{attrs:{id:"key-points-of-the-virtual-dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#key-points-of-the-virtual-dom"}},[t._v("#")]),t._v(" Key Points of the Virtual DOM")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("Virtual Representation")]),t._v(":")]),t._v(" "),a("ul",[a("li",[t._v("The Virtual DOM is a JavaScript object that mirrors the structure of the actual DOM.")]),t._v(" "),a("li",[t._v("It does not directly interact with the browser.")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Rendering and Updating")]),t._v(":")]),t._v(" "),a("ul",[a("li",[t._v("When a React component's state or props change, a new Virtual DOM tree is created.")]),t._v(" "),a("li",[t._v("React compares this new Virtual DOM tree with the previous one to identify changes.")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Diffing Algorithm")]),t._v(":")]),t._v(" "),a("ul",[a("li",[t._v("React uses a diffing algorithm to compare the new and old Virtual DOM trees.")]),t._v(" "),a("li",[t._v("This algorithm efficiently determines the minimal set of changes needed to update the real DOM.")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Batch Updates")]),t._v(":")]),t._v(" "),a("ul",[a("li",[t._v("React batches multiple updates together to minimize re-renders and improve performance.")]),t._v(" "),a("li",[t._v("This reduces the overall time taken to update the DOM.")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Reconciliation")]),t._v(":")]),t._v(" "),a("ul",[a("li",[t._v("React updates only the parts of the DOM that have changed, based on the diffing process.")]),t._v(" "),a("li",[t._v("This selective updating is faster than re-rendering the entire DOM tree.")])])])]),t._v(" "),a("h2",{attrs:{id:"how-the-virtual-dom-works"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-the-virtual-dom-works"}},[t._v("#")]),t._v(" How the Virtual DOM Works")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("Initial Render")]),t._v(":")]),t._v(" "),a("ul",[a("li",[t._v("React creates a Virtual DOM tree from the components and converts it to the real DOM for display.")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("State/Props Update")]),t._v(":")]),t._v(" "),a("ul",[a("li",[t._v("When the state or props change, a new Virtual DOM tree is created.")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Diffing Process")]),t._v(":")]),t._v(" "),a("ul",[a("li",[t._v("The new Virtual DOM tree is compared to the previous one to identify changes.")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Updating the Real DOM")]),t._v(":")]),t._v(" "),a("ul",[a("li",[t._v("Only the necessary changes are applied to the real DOM, ensuring it is in sync with the Virtual DOM.")])])])]),t._v(" "),a("h2",{attrs:{id:"advantages-of-the-virtual-dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#advantages-of-the-virtual-dom"}},[t._v("#")]),t._v(" Advantages of the Virtual DOM")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("Performance")]),t._v(":")]),t._v(" "),a("ul",[a("li",[t._v("Reduces direct manipulations of the real DOM, which are slow and costly.")]),t._v(" "),a("li",[t._v("Updates only the changed parts, improving efficiency.")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Simplicity")]),t._v(":")]),t._v(" "),a("ul",[a("li",[t._v("Developers can focus on writing declarative UI components without managing DOM updates manually.")]),t._v(" "),a("li",[t._v("React handles the complex DOM operations, simplifying development.")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Predictability")]),t._v(":")]),t._v(" "),a("ul",[a("li",[t._v("Provides a predictable model for how the UI updates in response to data changes.")]),t._v(" "),a("li",[t._v("Easier to debug and maintain applications.")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Cross-Browser Compatibility")]),t._v(":")]),t._v(" "),a("ul",[a("li",[t._v("Abstracts away differences in browser DOM handling, ensuring consistent behavior across browsers.")])])])]),t._v(" "),a("h2",{attrs:{id:"example-virtual-dom-in-action"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-virtual-dom-in-action"}},[t._v("#")]),t._v(" Example: Virtual DOM in Action")]),t._v(" "),a("p",[t._v("Here’s a simple example to illustrate how the Virtual DOM works in React:")]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" useState "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"react"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Counter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("increment")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("Count: ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("onClick")]),a("span",{pre:!0,attrs:{class:"token script language-javascript"}},[a("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("increment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("Increment")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" Counter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"step-by-step-process"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#step-by-step-process"}},[t._v("#")]),t._v(" Step-by-Step Process")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("Initial Render")]),t._v(":")]),t._v(" "),a("ul",[a("li",[t._v("The "),a("code",[t._v("Counter")]),t._v(" component is rendered with "),a("code",[t._v("count = 0")]),t._v(".")]),t._v(" "),a("li",[t._v("A Virtual DOM tree is created and converted to the real DOM.")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("State Update")]),t._v(":")]),t._v(" "),a("ul",[a("li",[t._v('Clicking "Increment" updates the state to '),a("code",[t._v("count = 1")]),t._v(".")]),t._v(" "),a("li",[t._v("A new Virtual DOM tree is created with the updated state.")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Diffing and Reconciliation")]),t._v(":")]),t._v(" "),a("ul",[a("li",[t._v("React compares the new Virtual DOM tree with the previous one.")]),t._v(" "),a("li",[t._v("Identifies that the "),a("code",[t._v("<p>")]),t._v(" tag's text content has changed ("),a("code",[t._v("Count: 0")]),t._v(" to "),a("code",[t._v("Count: 1")]),t._v(").")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Real DOM Update")]),t._v(":")]),t._v(" "),a("ul",[a("li",[t._v("React updates only the "),a("code",[t._v("<p>")]),t._v(" tag's text content in the real DOM.")]),t._v(" "),a("li",[t._v("The rest of the DOM remains unchanged.")])])])]),t._v(" "),a("h2",{attrs:{id:"summary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#summary"}},[t._v("#")]),t._v(" Summary")]),t._v(" "),a("p",[t._v("The Virtual DOM is a fundamental concept in ReactJS that enhances performance by reducing direct DOM manipulations. It creates a virtual representation of the DOM, uses an efficient diffing algorithm to identify changes, and updates only the necessary parts of the real DOM. This results in faster, more predictable, and easier-to-maintain web applications.")])])}),[],!1,null,null,null);a.default=n.exports}}]);