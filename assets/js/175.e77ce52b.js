(window.webpackJsonp=window.webpackJsonp||[]).push([[175],{456:function(s,t,a){"use strict";a.r(t);var n=a(14),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"linux-all-commands"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux-all-commands"}},[s._v("#")]),s._v(" Linux All commands")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Saturday 21 August 2021 07:45:12 AM IST")]),s._v("\n\nncal/cal "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# n mean new calendar")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  August 2021")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Su  1  8 15 22 29")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Mo  2  9 16 23 30")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Tu  3 10 17 24 31")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# We  4 11 18 25")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Th  5 12 19 26")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Fr  6 13 20 27")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Sa  7 14 21 28")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello rohan"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# passing value to command ex")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# print entire calendar")]),s._v("\nncal "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2021")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# only july 2021 month")]),s._v("\nncal july "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2021")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    July 2021")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Su     4 11 18 25")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Mo     5 12 19 26")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Tu     6 13 20 27")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# We     7 14 21 28")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Th  1  8 15 22 29")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Fr  2  9 16 23 30")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Sa  3 10 17 24 31")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" colors.txt / "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v(" colors.txt / "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--reverse")]),s._v(" colors.txt\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# colors.txt file inside")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# blue")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# green")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# indigo")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# orange")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# red")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# violet")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# yellow")]),s._v("\n\n\nncal "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-j")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    August 2021")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Su 213 220 227 234 241")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Mo 214 221 228 235 242")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Tu 215 222 229 236 243")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# We 216 223 230 237")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Th 217 224 231 238")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Fr 218 225 232 239")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Sa 219 226 233 240")]),s._v("\n\nncal "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-h")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# no high ligh current date")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  August 2021")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Su  1  8 15 22 29")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Mo  2  9 16 23 30")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Tu  3 10 17 24 31")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# We  4 11 18 25")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Th  5 12 19 26")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Fr  6 13 20 27")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Sa  7 14 21 28")]),s._v("\n\n\nncal "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-j")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# also display day")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     August 2021")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Su 213 220 227 234 241")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Mo 214 221 228 235 242")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Tu 215 222 229 236 243")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# We 216 223 230 237")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Th 217 224 231 238")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Fr 218 225 232 239")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Sa 219 226 233 240")]),s._v("\n\nncal "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-M")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# start day with monday")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     August 2021")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Mo     2  9 16 23 30")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Tu     3 10 17 24 31")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# We     4 11 18 25")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Th     5 12 19 26")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Fr     6 13 20 27")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Sa     7 14 21 28")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Su  1  8 15 22 29")]),s._v("\n\nncal "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# next three with current month cal")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     July 2021         August 2021       September 2021")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Su     4 11 18 25     1  8 15 22 29        5 12 19 26")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Mo     5 12 19 26     2  9 16 23 30        6 13 20 27")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Tu     6 13 20 27     3 10 17 24 31        7 14 21 28")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# We     7 14 21 28     4 11 18 25        1  8 15 22 29")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Th  1  8 15 22 29     5 12 19 26        2  9 16 23 30")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Fr  2  9 16 23 30     6 13 20 27        3 10 17 24")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Sa  3 10 17 24 31     7 14 21 28        4 11 18 25")]),s._v("\n\nncal "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-h")]),s._v(" / ncal "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-3h")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# no high ligh date cal")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-u")]),s._v(" / "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--universal")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# long and short command")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Saturday 21 August 2021 03:00:27 AM UTC")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# get uniqu values")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--reverse")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--unique")]),s._v(" colors.txt / "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-ru")]),s._v(" colors.txt\n\n\nncal "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-A")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# current month after plus more")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    August 2021       September 2021")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Su  1  8 15 22 29        5 12 19 26")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Mo  2  9 16 23 30        6 13 20 27")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Tu  3 10 17 24 31        7 14 21 28")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# We  4 11 18 25        1  8 15 22 29")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Th  5 12 19 26        2  9 16 23 30")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Fr  6 13 20 27        3 10 17 24")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Sa  7 14 21 28        4 11 18 25")]),s._v("\n\nncal "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-B2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# two month before plus with current month")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     June 2021         July 2021         August 2021")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Su     6 13 20 27        4 11 18 25     1  8 15 22 29")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Mo     7 14 21 28        5 12 19 26     2  9 16 23 30")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Tu  1  8 15 22 29        6 13 20 27     3 10 17 24 31")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# We  2  9 16 23 30        7 14 21 28     4 11 18 25")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Th  3 10 17 24        1  8 15 22 29     5 12 19 26")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Fr  4 11 18 25        2  9 16 23 30     6 13 20 27")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Sa  5 12 19 26        3 10 17 24 31     7 14 21 28")]),s._v("\n\nncal "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-A1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-B1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# after and before both command")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     July 2021         August 2021       September 2021")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Su     4 11 18 25     1  8 15 22 29        5 12 19 26")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Mo     5 12 19 26     2  9 16 23 30        6 13 20 27")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Tu     6 13 20 27     3 10 17 24 31        7 14 21 28")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# We     7 14 21 28     4 11 18 25        1  8 15 22 29")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Th  1  8 15 22 29     5 12 19 26        2  9 16 23 30")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Fr  2  9 16 23 30     6 13 20 27        3 10 17 24")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Sa  3 10 17 24 31     7 14 21 28        4 11 18 25")]),s._v("\n\nncal "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-B1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-A2")]),s._v(" july "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     June 2020         July 2020         August 2020")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Su     7 14 21 28        5 12 19 26        2  9 16 23 30")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Mo  1  8 15 22 29        6 13 20 27        3 10 17 24 31")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Tu  2  9 16 23 30        7 14 21 28        4 11 18 25")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# We  3 10 17 24        1  8 15 22 29        5 12 19 26")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Th  4 11 18 25        2  9 16 23 30        6 13 20 27")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Fr  5 12 19 26        3 10 17 24 31        7 14 21 28")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Sa  6 13 20 27        4 11 18 25        1  8 15 22 29")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sections")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("man")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-k")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("passwd")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("man")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("passwd")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("clear")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("passwd")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("clear")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("whoami")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# open file manager")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("xdg-open")]),s._v(" /\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("xdg-open")]),s._v(" ~\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("open")]),s._v(" ~ "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in mac")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("xdg-open")]),s._v(" filenamehere\n\n\n\n/ "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# root")]),s._v("\n~ "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# home")]),s._v("\n\ngedit ~/.zshrc\ngedit ~/.bashrc\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# get information about file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" filename.pdf\n\n\nctrl+r search anything example "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" after again press ctrl+r next suggtion will come\n\n\n\n\n")])])]),t("h2",{attrs:{id:"grep"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#grep"}},[s._v("#")]),s._v(" grep")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" PATTERN FILE\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Chapter"')]),s._v(" book.txt\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"chicken"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#search wold")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-w")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cat"')]),s._v(" book.txt\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# . - matches any single character")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ^ - matches the start of a line")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $ - matches the end of a line")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [abc] - matches any character in the set")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [^abc] - matches any char NOT in set")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [A-Z] - matches characters in a range")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# * - repeat previous expression 0 or more times")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# \\ - escape meta-characters")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This example matches a string that contains a digit")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1-9 (not 0), followed by any 4 characters.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[1-9]....'")]),s._v(" prices.txt\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Grep -o")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The -o option tells grep to only print out the")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# matches, rather than the entire line containing")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# each match")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\$[1-9]"')]),s._v(" prices.txt\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Grep -c")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The -c option tells grep to print the number of")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# matches instead of printing the actual matches")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\$[1-9]"')]),s._v(" prices.txt\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# find version in json file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" version package.json\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# search in all file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rohan"')]),s._v(" *.json\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# search current directory and r mean recursevi")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v(" vue "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# search file => dot mean current dir")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"app.js"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# search all md file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*md"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*json"')]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# search file after search inside file content")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# xargs mean echo =>")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# xargs mean get result output")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*json"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"vue"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--include")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*json"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"vue"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("bind")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("bind")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"#"')]),s._v(" *.md\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-A")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"#"')]),s._v(" *.md\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-A")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"#"')]),s._v(" *.md\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-B")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"#"')]),s._v(" *.md\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-C")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"#"')]),s._v(" *.md\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-C")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"#"')]),s._v(" *.md\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"h."')]),s._v(" readme.md\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\.com"')]),s._v(" readme.md\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"##*"')]),s._v(" readme.md\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(.*)"')]),s._v(" readme.md\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http."')]),s._v(" readme.md\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https\\?"')]),s._v(" readme.md\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https\\+"')]),s._v(" readme.md\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"#*"')]),s._v(" readme.md\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"#\\+"')]),s._v(" readme.md\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-E")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"###?"')]),s._v(" readme.md\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-E")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"###+"')]),s._v(" readme.md\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"is it grey or gray?"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"grey\\|gray"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"is it grey or gray?"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-E")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"grey|gray"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^#"')]),s._v(" readme.md\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^#"')]),s._v(" readme.md\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('",$"')]),s._v(" readme.md\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^import .* from"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" abc123 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[ab]"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" abc123 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[a-z]"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" abc123 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[1-9]"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"de[a-z]*er"')]),s._v(" readme.md\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"de[:alpha:]*er"')]),s._v(" readme.md\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*js"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[sS]pec"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-rE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(grey|gray)\\\'"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-rE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"(grey|gray)(\\'|"),t("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(')"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Invers search")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*js"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node_modules"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*js"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-vE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node_modules|Spec"')]),s._v("\n\n\n")])])]),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("man")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-k")]),s._v(" dog\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The type command will tell us... the type of a command")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# To find the exact location of an executable,")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# run which command")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This only works for executables, not built-in")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# shell commands or aliases.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Some commands do not have man pages")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# written for them, because they are commands")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# that are directly built in to the shell.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# We can find documentation for those commands")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# using the help command.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For example, to learn more about the cd")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# command we would run help cd")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-la")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# backing up")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" filename\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" foldername\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# infomation file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" untitled.json\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nano")]),s._v(" FILE\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ctrl+w search")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ctrl+\\ replace")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ctrl+x exit")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ctrl+o done")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ctrl+k cut")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ctrl+u paste")]),s._v("\n\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# To delete empty folders, we need to use the -d option")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# with rm. For example, rm -d cats would remove the")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cats directory (only if it's already empty)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# To delete folders that are NOT empty, use the -r option.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For example, rm -r chickens would delete the chickens")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# directory whether it's empty or not.")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" filename\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("foldername"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# move")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("source"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("destination"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rename")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("current"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("newname"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# copy")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("source"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("destination"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#terminal")]),s._v("\n\nctrl-l "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# clear")]),s._v("\n\nctrl-a "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to move the cursor to the beginning of the line.")]),s._v("\nctrl-e "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to move the cursor to the end of the line.")]),s._v("\n\nctrl-k "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to kill the text from the current cursor location until the end of the line start should be begginer")]),s._v("\n\nctrl+u "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to kill the text from the current cursor location to the beginning of the line. end line to remove all")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ctrl-r search")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("less")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# use / for search")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - press space or f to go to the next page of the file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - press b to go back to the previous page")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - press Enter or Down arrow to scroll by one line")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - to search, type forward slash / followed by a pattern")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - press q to quit")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("less")]),s._v(" filename\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# reverse read down text first come top go down text")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tac")]),s._v(" filename\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# first 10 line")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" filename\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# only read two lines")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" colors.txt\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# only read text characters")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" colors.txt\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# end 10 lines read")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tail")]),s._v(" filename\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The same -n and -c options we saw with head also")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# work with the tail command.")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# everything count")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v(" colors.txt\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tolal lines count")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v(" colors.txt\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# word count")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-w")]),s._v(" colors.txt\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# read file by sorts")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" colors.txt\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# reverse read")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v(" filename.txt\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# number sort")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" filename\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# unique only")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-u")]),s._v(" prices.txt\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" data.txt "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-nk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# pencil 0.50      pencil 0.50")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# flowers 9.99     soda 0.99")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# pie 4.99         pie 4.99")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# soda 0.99        flowers 9.99")]),s._v("\n\n\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"moo"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" cow.js\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" files.txt\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# appending")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" greeting.txt\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# both command same")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" filename\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("  filename\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" original.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" output.txt\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" names.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" sorted.txt\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# error send")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" nonexistentfile "),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v(" error.txt\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# both are same")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v(" now.txt\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" now.txt "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# defaults")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-zzz")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v(" error.txt\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-zzz")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">>")]),s._v(" error.txt\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# all together now")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" bees.txt ants.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" insects.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v(" error.txt\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# both are same")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" docs "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" output.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v(" output.txt\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" docs "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" output.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# both are same")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" docs "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&>")]),s._v(" output.txt\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" docs "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&>>")]),s._v(" output.txt\n\n\n\n\n\n\n\ncommand1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" command2\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-10")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v(" /usr/bin "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("less")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  replace characters")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  small h replace with capital H")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello world"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" h H\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# replace all small latter with capital")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello world"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" a-z A-Z\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# delete every l")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello world"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" l\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# only small remove")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" data.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" a-z\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  small and capital remove")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" data.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":alpha:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" data.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":alpha:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":blank:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" save.txt\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" colors.txt pets.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-7")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tail")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-5")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tee mean pip tee in real life pipe bashroom we need one tee cannect three pipe same thing")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# first commmand print data | second copy data in file | third command copy second command count word")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tee use for create file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" colors.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" colorcopy.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# largest file 3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("du")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-ha")]),s._v(" /usr/bin "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-h")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tail")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-3")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# he asterisk ( * ) character represents zero or more")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# characters in a filename. For example...")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - ls *.html will match any files that end with .html like")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# index.html and navbar.html")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# - cat blue* will match any files that start with "blue" like')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# "blue.html" or "bluesteel.js"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" *.html\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" blue*\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# - ls app.?? will match any files named "app" that end')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# with two character file extensions like "app.js" or')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# "app.py" but NOT "app.css"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - ls pic?.png will match pic1.png, pic2.png, pic3.png,")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# but also picA.png, or picx.png.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" pic?.png\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" app.??\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# nside of square brackets ( [ ] ) we can specify a range")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# of characters to match.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - ls pic[123].png will only match pic1.png, pic2.png, and")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# pic3.png")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - ls file[0-9] will match file1, file2, file3, up to file9")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - ls [A-F]* will match any files that begin with a capital")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# A, B, C, D, E, or F")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("A-F"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("*\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" pic"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(".png\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" file"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("-9"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Inside of square brackets ( [ ] ) we can specify a range")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# of characters to NOT match, using a caret ( ^ )")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# - ls [^a]* will match any files that do NOT start with "a"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - ls [^0-9]* will match any files that do NOT start with a")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# numeric digit (0-9)")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("^a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("*\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# We can also use predefined named characters classes:")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [:alpha:] - alphabetic characters, upper and lower")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [:digit:] - digits 0-9")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [:lower:] - lower case letters")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [:upper:] - upper case letters")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [:blank:] - blank characters: space and tab")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [:punct:] - punctuation characters")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [:alnum:] - alphanumeric characters (alpha + digit)")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":upper:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("*\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Brace expansion is used to generate arbitrary strings.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Basically, it will generate multiple strings for us based")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# on a pattern. We provide a set of strings inside of curly")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# braces ( { } ), as well as optional surrounding prefixes")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# and suffixes.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The specified strings are used to generate all possible")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# combinations with the optional prefixes and suffixes.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For example, touch page{1,2,3}.txt will generate three")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# new files: page1.txt, page2.txt, and page3.txt")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" page"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1,2")]),s._v(",3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(".txt\n\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" jan"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("31")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# We can provide a numeric range, which will be used to")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# generate a sequence. In this example, jan{1..31} will be")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# expanded to jan1, jan2, jan3, etc. until jan31.")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# We can provide a third value which defines the interval")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# for the range. In this example, echo {2..10..2} will print")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# out the numbers 2, 4, 6, 8, and 10")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" group-"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(".txt\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# We can even specify alphabetical ranges. This")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# example generate the files group-a.txt, group-b.txt,")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# group-c.txt,group-d.txt, and group-e.txt")]),s._v("\n\n\n\n "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("a,b,c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1,2")]),s._v(",3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  a1 a2 a3 b1 b2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# b3 c1 c2 c3")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("b,r"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("eef,at,ag"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# beef bat bag")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# reef rat rag")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("x,y"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",z"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# x y1 y2 y3 y4 y5 z")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("expression"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The shell will perform arithmetic via expansion using the")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $((expression)) syntax. inside the parentheses, we can")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# right artithmetic expressions using:")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# + addition")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - subtraction")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# * multiplication")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# / division")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ** exponentiation")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# % modulo (remainder operator)")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"today is '),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1 2 3 4 5")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{1..9"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# {1..9}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v(' is 4"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4 is 4")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$((2+2)) is 4'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  $((2+2)) is 4")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$5")]),s._v('.00"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# .00")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$5")]),s._v('.00"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $5.00")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# use for search file location")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" mlocate\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("locate")]),s._v(" colors.txt\n\n\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# default show list also inside dir updated of ls")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# only file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-type")]),s._v(" f\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# only dir")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-type")]),s._v(" d\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#find by name")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*.txt"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*.html"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*[0-9]*"')]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1 gb find")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-size")]),s._v(" +1G\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-size")]),s._v(" +10M\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# find by user")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" ~ "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-user")]),s._v(" codingdais\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" /home "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-user")]),s._v(" codingdais\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# created 30 min before")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-mmin")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-30")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -amin n will find files that were last accessed n minutes")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# ago. We can specify +n for "greater than n minutes')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# ago" and -n for "less than n minutes ago"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -anewer file will find files that have been accessed")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# more recently that the provided file.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# find -cmin -20 matches items that were modified LESS")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# than 20 minutes ago.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# find -cmin +60 matches items that were modified more")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# than 60 minutes ago")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Logical Operators")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# We can also use the -and , -or , and -not operators to")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create more complex queries")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*chick*"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-or")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*kitty*"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-not")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*.html"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-type")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*.html"')]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-lu")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-lc")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Timestamps")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mtime, or modification time, is when a file was last")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# modified AKA when its contents last changed.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ctime, or change time, is when a file was last changed.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This occurs anytime mtime changes but also when we")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rename a file, move it, or alter permissions.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# atime , or access time, is updated when a file is read by")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# an application or a command like cat.")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-mmin")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-30")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Finding By Time")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# We can use the -mtime num option to match")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# files/folders that were last modified num*24 hours ago.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# find -mmin -20 matches items that were modified LESS")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# than 20 minutes ago.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# find -mmin +60 matches items that were modified")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# more than 60 minutes ago")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-mtime")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-30")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -amin n will find files that were last accessed n minutes")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# ago. We can specify +n for "greater than n minutes')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# ago" and -n for "less than n minutes ago"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -anewer file will find files that have been accessed")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# more recently that the provided file.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# find -cmin -20 matches items that were modified LESS")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# than 20 minutes ago.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# find -cmin +60 matches items that were modified more")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# than 60 minutes ago")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# find empty file")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-type")]),s._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-empty")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ls -l not work")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-type")]),s._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-empty")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  you have to use like this")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-type")]),s._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-empty")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-exec")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{}'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("';'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-type")]),s._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-empty")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-exec")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{}'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("';'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-type")]),s._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-empty")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-ok")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{}'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("';'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-empty")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-ok")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{}'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("';'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# copy file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-type")]),s._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*.html"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-exec")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{}'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{}_COPY'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("';'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("less")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tail")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# xargs mean standard input")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-type")]),s._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-empty")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# error down solution")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  both are same command")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-type")]),s._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-empty")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-exec")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{}'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("';'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-type")]),s._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-empty")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" hello world "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# error")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" hello world "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"chapter[1-4].txt"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" fullbook.txt\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printenv")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printenv")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" User\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printenv")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("HOME")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$USERNAME")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# define variable")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("myname")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rohan dhiman"')]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" myname "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# add into environment")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$myname")]),s._v("\n\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# add name in environtment printenv")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("myname2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rohan hacker"')]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printenv")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" myname\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[[:digit:]]*"')]),s._v(" colors.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" num.txt\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# terminal change")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("zsh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PS1")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"type something... "')]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("su")]),s._v(" root\nrohann0001\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# first set password of root")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("passwd")]),s._v(" root\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# current password root as root")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("man")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# use bash shell")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PS1")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\u'")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PS1")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\u \\t'")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# alias")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#make alias")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("rh")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo rohan hacker"')]),s._v("\n rh\n\n "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" rh\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# list with size human readable")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("du")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-h")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# custom script run")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  first make folder in home dir => bin")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# make new file in bin folder hi")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello everyone"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# run this command")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" .profile\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# auto matic add in $PATH")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# change path")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" a+x hi\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# run hi now")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# python3, curl and perl by default install")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" python3\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" perl\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# run python script")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nano")]),s._v(" pyhi\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/python3")]),s._v("\nprint"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello python "')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" x pyhi\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# run pyhi")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# same perl")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nano")]),s._v(" perlhi\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/perl")]),s._v("\nprint "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hi FROM PERL "')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x perlhi\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# run perlhi")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"wttr.in"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# take input from file like (weather city)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $1 mean city get input")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# crontab -e")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# every minute")]),s._v("\n* * * * * "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"another min date is : '),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(' "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" ~/time.log "),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),s._v("\n\ntree\ntree "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# dir")]),s._v("\ntree "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-C")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# colors")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# permissin")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - mean regular ffile")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# d mean directory")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# L symbolic link")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Read R Write W Execute X")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# u User g Group o Other a All")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# user--- group--- other---")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# chomd => change mode command")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ugoa => user category, user, group, other, all")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# +-= => add, subtract, or set permission")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rwx => read, write, execute")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" g+w sales.data\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" g-w sales.data\nchomod g+wx sales.data\nchomod u+rwx,g-x sales.data\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("a")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("r sales.data\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("u")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("rwx, "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("g")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("rx,o"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sales.data\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# r w  x")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 0 0  0 values for off")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1 1  1 binary value for on")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4 2  1 base 10 value for on")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# order has meaing")]),s._v("\n            U   G   O\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# symbolic    rwx r-w r--")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# binary      111 101 100")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# decimal     7     5  4")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Commonly used permission")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# symbolic    octal")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -rwx        700")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -rwxr-xr-x  755")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -rw-rw----  664")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -rw-rw----  660")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -rw-r--r--  644")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rm file removefile")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rm -r dir remove the directory and its contents recursively")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rm -f file forece remove and never promat confimation")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-u")]),s._v(" filename\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-ru")]),s._v(" fiilename\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-u")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-k2")]),s._v(" filename\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -k F => sort by key. F is the field number")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -r => sort in reverse order")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -u => sort unique")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# creating a collection of files")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tar [-] c|x|f f tarfile [patterns]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Create, extract or list contes of a tar archie using patters, if supplied")]),s._v("\nC mean create a "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" archive\nx mean extract files from the archive.\nt mean display the table of contents"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("list"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("v")]),s._v(" mean be verbose\nz mean use compression\nf "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" mean use this "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# convert")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" cf script.tar red\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#extract")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" xf script.tar\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# display data of tar file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" tf script.tar\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# extract and view file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" xvf script.tar\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# same file convert into zip save space")]),s._v("\nCompressing "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" to save space\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("gzip")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" compress files\ngunzip "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" uncompress files\ngzcat concatenates compressed "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\nzcat contacttes compressed "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("du")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" estimates "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" usage\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("du")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-k")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" display sizes "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" kilobytes\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("du")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-h")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" display size "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" human readable "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  convert")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" zcf red.tgz redfoldername\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# view convert files")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" ztvf red.tgz\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" script*\n\n\n\nthe "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" commands\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# find [path..] [expression]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# recursively finds files in path match expression.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# if no arguments are supplied it find all files in the current directory")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" options\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-name")]),s._v(" pattern "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" files and directories that match pattern\n\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-iname")]),s._v(" pattern like-name, but igonores case.\n\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-ls")]),s._v(" performs an "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" on each of the found items\n\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-mtime")]),s._v(" days  finds files that ar days old\n\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-size")]),s._v(" num finds "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" that are of size num.\n\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-newer")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" finds files that are newer than file.\n\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-exec")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nrun "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" against all the files that are found\n\n\nA fast "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("locate")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("locate")]),s._v(" pattern\n\nlists files that match pattern\nfaster than the "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v("\nqueries an index\nresults are not "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" real "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v("\nmay not be enabled on all systems\n\n\n\nremoving files\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("remove "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dir")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" remmove the direcotyr and it contents recursiely\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" forece removal and never prompt "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" confimation\n\n\ncopying files\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" source_file destination_file\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" run "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" interactive mode\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v(" source_direcotry destination\ncopy src_directory recursvily to destination\n\n\nmoving and renaming files\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" move or "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rename")]),s._v(" files and directories\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" destination\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" destination\n\n\n\nsorting data\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" filename "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" text "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" options\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-k")]),s._v(" F "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" by key. F is the field  number\n\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" reverse order\n\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-u")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" unique\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-mtime")]),s._v(" +10\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-mtime")]),s._v(" +10 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-mtime")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-13")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-size")]),s._v(" +1M\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# search in man")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("man")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-k")]),s._v(" calendar\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" thsi directory\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(" the parent directory\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" - change to the previous directory\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-rf")]),s._v(" direcotry "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" recursively remove direcotry\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rmdir")]),s._v(" remove only empty direcotry\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-F")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n/ directory\n@ Link\n* executable\nA "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" is a points to the actual "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" or directory\nA "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" can be used to create a shortcut\n\n\nlisting files by "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v(" and "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" reverse\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" list files by "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" reverse order\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-latr")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" long listing includes all files reverse sorted by "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-R")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" lists files recursively\n\n\nwildcards\n\n*- matches zero or "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" characters\n    *.txt\n    a*\n    a*.txt\n\n?- matches exactly one character\n    ?.txt\n    a?\n    a?.txt\n\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" a character class\n    * matches any of the characters included between the brackets. matches exactly one character.\n    * "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("aeiou"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    * can"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("nt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("*\n        can\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v("\n        candly\n        catch\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" matches any of  charaters not include between the backets. matches exactly one character\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("aeiou"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("*\n        * baseball\n        * cricket\n\nUse two characters separated by a hyphen to create a range "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" a character class\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("a-g"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("*\n    matchs all files that start with a,b,c,d,e,f or g\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("-6"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("*\n    matches all files that start with "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3,4")]),s._v(",5 or "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":alpha:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":alnum:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":digit:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":lower:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":space:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":upper:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n\n* "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("- escape character. use "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" you want to match a wildcard character.\n    * match all files that end with a question mark\n    *"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("?\n\n\nInput/output types\ni/o name                    abbreviation        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\nstandard input      stdin       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\nstandard output     stdout      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nstandard error      stderr      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n\n\nredirection\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Redirects standard output to a "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" overrites "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("truncating"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" existing contents\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" redirects standard output to a "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" appends to any existing contents\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" redirects input from a "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" to a command.\n\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" used with redirection to signal that a "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" descriptor is being used.\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),s._v(" combine stderr and standard output\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v("file  Redirect standard error to afile\n\n\nThe null device\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null Redirect output to nowhere\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" here not-here "),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v(" /dev/null\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" here not-here "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /dev/null "),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),s._v("\n\n\n\n\n\n\n\n\nDiff output\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" file1 file2\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("actions")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("ad "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("hange "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("elete\n\n\nctrl-w w go to next window\n:q quit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("close current window"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n:qa quit all"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("close both files"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n:qa"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" forece quit all\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" file1 file2\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sdiff")]),s._v(" file1 file2\n\nvimdiff file1 file2\n\n\n\nthe "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v("    display lines matching a pattern.\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" pattern "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep otions")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -i Perform a search, ignoring case")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -c Count the number of occurrences in a file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -n Precede output with line numbers")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - Invert match. print lines that don't match")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# get user")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" user secret\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# not content inside user")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v(" user secret\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ignore case")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" User secret\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# get count match line")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-ci")]),s._v(" User secret\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# print line number match")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-ni")]),s._v(" user sercret\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# search in bannary like mp3")]),s._v("\n\n\nstrings giant-steps.mp3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" john\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cut only selected area work")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" codingdais /etc/passwd "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d: -f3,3\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" num.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d: "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f2")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Copying files over the network")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mac and linux inbuilt both")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("scp")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" secure copy\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sftp")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" transfer protocol\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# window")]),s._v("\nputty secure copy client - pscp.ext\nputty secure "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" transfer - psftp.exe\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# graphical scp/sftp clients")]),s._v("\ncyberduck\nfilezilla\nwinscp\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("scp")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" destination\n    copty "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" to destination\n\nsfpt "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v("\n    start a secure "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" transfer session with "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sftp")]),s._v(" rohan@host\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sftp")]),s._v("  linuxsvr\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\nlpwd\nlls\n\nput filename.txt\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("scp")]),s._v(" z.txt linuxsvr:/tmp/\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" linuxsvr\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("scp")]),s._v(" z.txt adminuser@linuxsvr:/home/adminuser\n\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# customizing the shell prompt")]),s._v("\nUse an environment variable to customize\n* bash, ksh, and "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" use "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PS1")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n\n* Csh, tcsh and "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("zsh")]),s._v(" use "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$prompt")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n\n\ncustomizing the prompt with "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PS1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("d Date "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" weekday month "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v(" tue may "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("h Hostname up  thefirst period\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("H "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hostname")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("n Newline\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("t Current "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v(" hour\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("T current "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" hour\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("@ current "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" hour\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("A current "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v("  hour\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("u Username of the current user\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("w Current working directory\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("W "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("basename")]),s._v(" of teh current working\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" the effective "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("UID")]),s._v(" is "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ) other a $")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export PS1=\"[\\u@\\h \\w \\$]\"'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" ~/.bash_profile\n\n\nProcesses and job control\nList running processes.\nForeground vs background processes\nlaunch background processes\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" processes\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" display process status\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ps => options")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -e everything, all processes")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -f full format listing")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -u username Display username's processes.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -p pid Display information for PID")]),s._v("\n\n\nCommon "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" commands\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ps -e Display all processes")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ps -ef Display all processes, full")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ps -eH display process tree")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ps -e --forest Display process tree")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ps -u username Display user's processes")]),s._v("\n\n\nother ways to views processes\n\npstree  Display processes "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" a tree "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("top")]),s._v("     interactive process viewer\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("htop")]),s._v("    interactive process viewer\n\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt")]),s._v(" - advance packaging tool\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-cache")]),s._v(" search string search "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" string\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v(" package "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" remove package remove package\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" purge package delete configuration\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# dpkg")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     list instlled package")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     dpkg -S /path/to/file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         list files's package")]),s._v("\ndpkg "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-L")]),s._v(" package\n    list all files "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" package\ndpkg "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" package.deb\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" package\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" dpkg "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" dropbox.deb\n\n\n\n\nShell "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v(" and autocompletion\nShell "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v("\nExclamation mark syntax\nAutocompletion\n\n\nShell "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v("\nExecuted commands  are added to the "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v("\nShell "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v(" can be displayed and recalled\nShell "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v(" is stored "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" memory and on disk\n    ~/.bash_history\n    ~/.history\n    ~/.histfile\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v(" Displays the shell "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("HISTSIZE")]),s._v(" controlls the number of commands to retail "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("HISTSIZE")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# !N repeate command line number N")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# !! repeate the revious command line")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# !string repeat the most recent command starting with "string."')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(":N "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Event"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Separator"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Word"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" Represents a "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" line "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("or event"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" The "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("most")]),s._v(" recent "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" line\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n:N Represents a word on the "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" line\n    "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" command, "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" first argument, etc\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("^ represents the first arugemnt\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("^ "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(":1\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("$ represents the last argument.\n\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" file.txt stored_filex.txt note.txt\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("^"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("filex.txt\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("$"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("notes.txt\n\nSearching shell "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v("\nctrl+r Reverse shell "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v(" search\nEnter Execute "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v("\nArrows change the "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v("\nCtrl+g Cancel the search\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("122")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v(" number and run this "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" by "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v(" number\n\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("i mean search start i\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" text.txt text2.txt text3.txt\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(":2   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# text2.txt print")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("$  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#text2.txt print")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# switching users and running commands as others")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("su")]),s._v(" username change user "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" or become superuser\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("su")]),s._v(" options\n- "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" a hyphen is used provide an environment similar to what the user would "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expect")]),s._v(" had the user logged "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" directly\n\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" specify a "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" to be executed\n\n\n\nusing "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v(" list available commands\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" run "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" as root\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-u")]),s._v(" root "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" same as above\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-u")]),s._v(" user "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" run as user\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("su")]),s._v(" switch to the superuser account\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sudo su - switch to superuser account with root's environment")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sudo su - username swtich to username account")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ignore list")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--ignore")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("green\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--ignore")]),s._v(" green\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--ignore")]),s._v(" hello "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--ignore")]),s._v(" green\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# full input")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-lsah")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tail")]),s._v(" ~/.bash_history\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" mean run old "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("u")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("rw,g"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("rw,o"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("rw hello.txt\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("777")]),s._v(" file.txt\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("u")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("rwx, "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("g")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("rwx, "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("o")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("rwx file.txt\n\n\nmultipass launch "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--name")]),s._v(" mysecondary\n\nmultipass stop mysecondary\n\nmultipass list\n\nmultipass start mysecondary\n\nmultipass "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" mysecondary -- "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/os-release\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/os-release\n\nmultipass shell secondary\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("logout")]),s._v("\n\nmultipass delete secondary\n\nmultipass purge\n\nmultipass list\n\n\n\n\n\n\n\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#############################")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git hub same like")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# main ubuntu create")]),s._v("\nssh-keygen "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" rsa\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" .ssh/\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" id_rsa.pub\n\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("###########   Server   ############")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" .ssh/\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" authorized_keys\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("paste")]),s._v(" inside id_rsa content\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("700")]),s._v(" ~/.ssh\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("600")]),s._v(" ~/.ssh/authorized_keys\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ifconfig")]),s._v("\nenp0s2 inet copy "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("############ ubuntu server use this ip ######")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" ubuntu@ip\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sftp")]),s._v(" ubuntu@10.161.7.226\nlls mean "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v(" computer\n put cron.log "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# local directory direct  push")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create file in local computer")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my local text"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" mybelocalfile.txt\n after that upload\n put mybelocalfile.txt\n\n l mean "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v("\n lls\n lpwd\n\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v(" use "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# download file")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" url\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# output return")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" url\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" url "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" test.html\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" downad.html url\n\n python3 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" http.server "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8000")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--bind")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0\n\n ipaddress:8000\n\n\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" url "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" test.html\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# install package and upgrade")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("aptitude")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("aptitude")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# color text")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" lolcat\nlolcat filename.txt\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("node")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" nodejs\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("node")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"console.log('Hello from node')\"")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt")]),s._v(" show nodejs\n\n\n\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Symbolic Links always use full path")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# same like window create shortcut desktop any software or folder")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  first folder name second where you want to create")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-s")]),s._v(" /home/codingdais/Videos/AnyDesk /home/codingdais/Desktop\n\nalt+move with drag create same "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v("\n\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create hard link")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v("  /home/codingdais/Videos/AnyDesk /home/codingdais/Desktop\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# hard link is same duplicate entry")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# both i node number same")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# get both number same")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# hard link not show shortcut icon")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# you can't move hard link")]),s._v("\n\n\n\n\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##### systemctl")]),s._v("\n\nsystemctl status apache2\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" apache2\nsystemctl start apache2\nsystemctl stop apache2\nsystemctl disable apache2\nsystemctl restart apache2\nsystemctl reload apache2\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#enable and start")]),s._v("\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--now")]),s._v(" apache2\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Edit files sytemctl")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /usr/lib/systemd/system\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nano")]),s._v(" servicename here\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nano")]),s._v(" mongodb.service\n\n\nsystemctl list-unit-files "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--type")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("service\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# firewal")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" firewall-cmd "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--zone")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("public "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--permanent")]),s._v(" --add-service"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("http\n\n\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# server reboot")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("reboot")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hostname")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/hostname\n\nhostnamectl\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#change host name")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" hostnamectl set-hostname speakingdais\n\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/hosts\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".1.1 speaking.mydomain.com speakingdais\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),s._v(" speaking.mydoamin.coms\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),s._v(" speakingdais\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# system views")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" snap "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("htop")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("htop")]),s._v("\n\n\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nano")]),s._v(" /etc/apt/sources.list\n\n\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" cheat.sh/php\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# awk both command same")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" colors.txt\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print}'")]),s._v(" colors.txt\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  first second third => there are three fields")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $0}'")]),s._v(" colors.txt\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $3}'")]),s._v(" colors.txt\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mutliple fields")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1,$3}'")]),s._v(" colors.txt\n\nll "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $5}'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $NF}'")]),s._v(" colors.txt\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" rohan tell me about your "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $2}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tell")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# With awk, you can leverage its power for the "manipulation of data files, text retrieval and processing, and for prototyping and experimenting with algorithms".')]),s._v("\n\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sed => stream editor")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# we explore the sed command. sed, aka the \"stream editor\" is an underused command, and that's a shame because it's extremely useful for manipulating text. In this video, I'll show you the basics of the sed command.")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sky replace Green")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# s mean string")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# file not change original")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# use any delamiter")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/sky/Green/'")]),s._v(" colors.txt\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s|sky|Green|'")]),s._v(" colors.txt\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s.sky.Green.'")]),s._v(" colors.txt\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# replace in current file use -i")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/sky/Green/'")]),s._v(" colors.txt\n\n\n\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# openssh")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# OpenSSH is the tool of choice for managing Linux installations remotely - and is indispensable in DevOps, Cloud, System Administration, Hosting, and more. Since it's so widely used, you should definitely learn it. In this video, I go over all the basics you need to use OpenSSH in your workflow. This includes understanding the difference between the client and server binaries, how to connect, config files, keys, and more!")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# What is "Openssh"/')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# * OpenSSH is a remote management tool, that gives you acccesss to run commands on another machine.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# * Developed by the OpenBSD project")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" ubuntu@ipaddress\n\nctrl+d mean "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("logout")]),s._v("\n\n.ssh/known_hosts "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# if you remove this file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# it will ask fingerprint ask again")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# this file save fingerprint when we login first time")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# connect multiple server")]),s._v("\ncreate new "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" inside .ssh\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" config\n\nHost myserver\n    Hostname "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.161")]),s._v(".7.244\n    Port "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v("\n    User root\n\nHost myserver2\n    Hostname "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.161")]),s._v(".7.244\n    Port "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v("\n    User root\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# run this command no need ssh ubuntu@ipaddres")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# aws")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" myserver\n\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" var/log\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# all login details which server login also ssh")]),s._v("\nauth.log\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" key disable by password login\n\nssh-keygen\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# automatic copy and paste on server")]),s._v("\n\nssh-copy-id "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" ~/.ssh/id_rsa.pub ubuntu@ipaddress\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# different type more secure")]),s._v("\nssh-keygen "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" ed25519 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-C")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"codingdais"')]),s._v("\n\n:/home/codingdais/.ssh/codingdais_id\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# conect with private key if send another person")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" ~/.ssh/codingdais_id ubuntu@ipaddress\n\n\n\n\n\n\n\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sshd")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" openssh-server\nsystemctl status sshd\nsystemctl restart sshd\nsystemctl stop sshd\nsystemctl start sshd\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" sshd\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Get all config files of ssh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /etc/ssh/\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# stop  password, stop root user, change port")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# by default port 22, secure also")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2222")]),s._v(" root@ipaddress\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nano")]),s._v(" sshd_config\nsystemctl restart sshd\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# disconect server")]),s._v("\n\n\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# remove")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--ignore")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("5_h.txt"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-empty")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-empty")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"5_h.txt"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1_h.txt"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("su")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" login as root\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# shells")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo options")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -n  Gives the output without a new line")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -e  This will allow usage of backslash escapes")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# \\b  Removes the space between text")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# \\n  Prints the text in a new line")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# \\t  Does a horizontal tab")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# \\v  Does a vertial Tab")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  -I mean ignore")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-I")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*.txt"')]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" hello\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" hello world\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" hello world\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-b")]),s._v(" hello world\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello \\bworld'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello \\nworld'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello \\tworld'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello \\vworld'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("x")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("33")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$x")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ls with colors")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" * "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# without colors list print alls")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("x"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("y"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$x")]),s._v("+"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$y")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# only 3+3")]),s._v("\n\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("man")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("34")]),s._v(" + "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("34")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("68")]),s._v("\n\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" length "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$hello")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v("\n\npress esc\nshift:q\n\ni "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" insert mode\n\n:w file1.txt\n:q\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" filename\n\n:wq mean "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),s._v(" and quite\n\n:q"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" without save\n:q\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("v")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("visual mode\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" press y mean copy text\n\nnormal mode press p mean "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("paste")]),s._v("\nnormal mode press u "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" undu\n\npress "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("shift")]),s._v(" + :wq\n\ni   insert text before teh cursor\nO   insert text on the previous line\no   insert text on the next line\na   append text after the cursor\nA   append text at the end of the line\n\n\n\n")])])]),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("f")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" *.txt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" -- "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$f")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${f"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(".txt}")]),s._v('.sh"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" output of "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" command:\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#empty line")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# variables_explicit")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("COUNT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"count = '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$COUNT")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" We have "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$COUNT")]),s._v(" oranges\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MESSAGE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello buddy"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message: '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$MESSAGE")]),s._v('"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# read command")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Your name: "')]),s._v(" NAME\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-sp")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Your age:"')]),s._v(" AGE\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Name: '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$NAME")]),s._v(", Age: "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$AGE")]),s._v('"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# advance read")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" Your name:\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" NAME\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" Your age:\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" AGE\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Employee "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("statistics")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" Name: "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$NAME")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" Age: "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$AGE")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# read form file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("HOSTNAME")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" /etc/hostname\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" Hostname: "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOSTNAME")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# measure time")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#start time measurement from here")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("START")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v(" +%s"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("CURRENT_DIRECTORY")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#sleep 2 seconds")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("END")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v(" +%s"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#end time measurement")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DIFFERENCE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v(" END "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" START "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" Time elapsed: "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$DIFFERENCE")]),s._v(" seconds.\n\n\n\n\n\n\n\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Enter first number: "')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" FIRST\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Enter second number: "')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" SECOND\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#do some let here")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("RESULT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("FIRST+SECOND\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$FIRST")]),s._v(" + "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$SECOND")]),s._v(" = "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$RESULT")]),s._v('"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#do some bc")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("RESULT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$FIRST")]),s._v("^"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$SECOND")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bc")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$FIRST")]),s._v(" ^ "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$SECOND")]),s._v(" = "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$RESULT")]),s._v('"')]),s._v("\n\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello World"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Script name: '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"First argument: '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Second argument: '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"All arguments with \\'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$@")]),s._v(": "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$@")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"All arguments with \\'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$*")]),s._v(": "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$*")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Arguments count: '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$#")]),s._v('"')]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#asign arguments value to a variable")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FIRST")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SECOND")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("RESULT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("FIRST+SECOND\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$FIRST")]),s._v(" + "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$SECOND")]),s._v(" = "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$RESULT")]),s._v('"')]),s._v("\n\n\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("IFS")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('","')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Script name: '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"First argument: '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Second argument: '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"All arguments with \\'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$@")]),s._v(": "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$@")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"All arguments with \\'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$*")]),s._v(": "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$*")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Arguments count: '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$#")]),s._v('"')]),s._v("\n\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("VAR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" VAR++\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" VAR++\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"var: '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$VAR")]),s._v('"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" VAR++\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" VAR++\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"var: '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$VAR")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("256")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" VAR++\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" VAR++\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"var: '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$VAR")]),s._v('"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# file operators (tests)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" FILE True "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" is a directory\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v(" FILE True "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" exists.\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" FILE True "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" exitsts and is a regular "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v(" FILE True "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" is radable by you\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-s")]),s._v(" FILE True "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" exists and is not empty\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-w")]),s._v(" FILE True "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" the "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" is writeable by you\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-x")]),s._v(" FILE True "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" the "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" is executable by you\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-z")]),s._v(" STRING True "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" string is empty\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" STRING True "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" string is not empty\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("STRING1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("STRING True "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" the string are equal\nSTRING1"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v("STRING2 True "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" the strings are not equal\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Arithmetic operators (tests)")]),s._v("\narg1 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-eq")]),s._v(" arg2 True "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" arg1 is equal to arg2\narg1 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-en")]),s._v(" arg2 True "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" arg1 is not equal to arg2\n\n\narg1 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-lt")]),s._v(" arg2 True "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" arg1 is "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("less")]),s._v(" than arg2\narg1 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-le")]),s._v(" arg2 True "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" arg1 is "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("less")]),s._v(" than or equal to arg2\n\narg1 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-gt")]),s._v(" arg2 True "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" arg1 is greater than arg2\narg1 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-ee")]),s._v(" arg2 True "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" arg1 is greater thatn or equal to arg2\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Making decisions - the if statement")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# if [ condition-is-true ]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# then")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     command 1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     command 2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     command 3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# fi")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MY_SHELL")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bash'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$MY_SHELL")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Your seem to like the bash"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# if [ condition-is-true ]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# then")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     command 1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     command 2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# else")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     command 2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# fi")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MY_SHELL")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bash'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$MY_SHELL")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Your seem to like the bash"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"you don\'t seem to like the bash"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# if [ condition-is-true ]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# then")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     command 1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     command 2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# elif [ condition-is-true ]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# then")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     command 2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# else")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     command 2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# fi")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MY_SHELL")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bash'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$MY_SHELL")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Your seem to like the bash"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$MY_SHELL")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sh"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"you seem to like the sh shell"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"you don\'t seem to like the bash"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# for loop")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# for VARIABLE_NAME IN ITEM1 ITEM2 ITEMN")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# do")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     command 1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     command 2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# done")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" COLOR IN red green blue\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"COLOR: '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$COLOR")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("COLORS")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"red green blue"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" COLOR IN "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$COLORS")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"COLOR: '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$COLOR")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("PICTURES")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" *jpg"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DATE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v(" +%F"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("PICTURE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PICTURES")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Renaming '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${PICUTURE}")]),s._v(" to "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DATE}")]),s._v(" - "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${PICTURE}")]),s._v('"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${PICTURE}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DATE}")]),s._v("-"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${PICTURE}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# positional paramters")]),s._v("\n\nscript.sh param1 param2 param3 param4\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"script.sh"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param1"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param2"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param3"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$4")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param4"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$@")]),s._v(" all commands\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# acceping user input (stdin)")]),s._v("\nthe "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" accept stdin\nsysntax\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"prompt"')]),s._v(" VARIABLENAME\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Checking the exit status")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v(" contains the "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" code of the previously executed "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" /not/here\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v('"')]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("HOST")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"google.com"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$HOST")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-eq")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$HOST")]),s._v(' reachable"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$HOST")]),s._v(' unreachable"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("HOST")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"google.com"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" HOST\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("RETURN_CODE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$RETURN_CODE")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-ne")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$HOST")]),s._v(' unreachable"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# && and ||")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("AND\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" /tmp/back "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" test.txt /tmp/bak/\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("OR\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" test.txt /tmp/bak/ "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" text.txt /tmp\n\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("HOST")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"google.com"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$HOST")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$HOST")]),s._v(' unreachable"')]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# creating functions")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("funcatinname")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# code goes here")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# call fucntion")]),s._v("\nfuncatinname\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# function can call other function")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("hello")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# another function call here")]),s._v("\n    funcatinname\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Don't do this compiler not good we to use top to bottom")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Position paramters")]),s._v("\nFunctions can accept paramters\nThe first paramter is stored "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\nThe second paramter is stored "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$@")]),s._v(" contains all of the parameters\njust like shell scripts.\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("the script itself, not "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" name\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# with paramter example function")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("hello")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# function name second paramter")]),s._v("\nhello rohan\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# multiple")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("hello")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("NAME")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$@")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$NAME")]),s._v('"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nhello rohan sonali akhista\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# variables scope")]),s._v("\nby default, variables are global\nvaribles have to be defined before used\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# local variables")]),s._v("\n\ncan only be accessed within the "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v("\ncreate using the "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v(" keyword.\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("LOCAL_VAR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nonly functions can have "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v(" variables\nbest practice to keep variales "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" functions\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exit status (return codes)")]),s._v("\nfunctions have an "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" status\nExplicitly\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("RETURN_CODE"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nImplicity\n    The "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" status of the last "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" executed "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v("\n\nvalid "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" codes range from "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" to "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("success\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("the "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" status\n\nmy_function\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# wildcards")]),s._v("\na character or stirng used "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" pattern matching\nglobal expands the wildcard pattern into a list of files/ or directories "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nwildcards can be used with "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("most")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" ls, rm, "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v("\n\n*-matches zero or "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" characters\n*.txt\na*\na*.txt\n\n?-matches exactly one character.\n?.txt\na?\na?.txt\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" wildcards chacter classes\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("- A character class.\n    Matches any of the characters included between the\n    brackets. matches exactly one character\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("aeiou"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    ca"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("nt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("*\n    can\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v("\n    candy\n    catch\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" - Matches any of the characters not included between the brackets matches exactly one character.\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("aeiou"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("*\nbaseball\ncricket\n\nwildcard ranges\nuse two characters separated by a hyphen to create a range "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" a character class\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("a-g"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("*\nmatches all files that start with a,b,c,d,e,f and g.\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(".-6"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nmatches all files that start with "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3,4")]),s._v(",5 and "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# names character classes")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":alpha:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":alnum:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":digit:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":lower:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":space:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":upper:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(" - escape character. use "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" you want to match a wildcard character.\n* match all files that end with a question mark:\n    *"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("?\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# log")]),s._v("\nsyslog standard\ngenerating log messages\ncustom logging functions\n\nlogs are the who, what, when, where, and why\noutput may scroll off the "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("screen")]),s._v("\nscript may run unattended "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("via "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cron")]),s._v(" etc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# syslog")]),s._v("\nthe syslog standard uses facilities and severities to categorieze messages.\nfacilities "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" kern, user, mail, daemon, auth, local0, local7\nseverties:emerg, alert, crit, err, warning, notice,info, debug\n\nLog files locations are congiguraable:\n    /var/log/messages\n    /bar/log/syslog\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-ltr")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cronjob")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("crontab")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# all cron job list")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -e mean edit")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("crontab")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("crontab")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("crontab")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-u")]),s._v(" root "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("crontab")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-u")]),s._v(" root "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /var/log/syslog "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" CRON\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# awk")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2366  ls /usr/bin > awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2367  word awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2368  cat awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2369  wc -l awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2370  awk '{print}' awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2371  awk '{print $0}' awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2372  awk '{print $1}' awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2373  awk '{print $2}' awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2374  awk '{print $1}' awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2375  cat awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2376  awk '/gcc/ {print $1}' awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2377  awk '/^w/ {print $1}' awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2378  awk '/^ws/ {print $1}' awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2379  awk '/^wr/ {print $1}' awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2380  awk '/path/ {print $1}' awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2381  awk '/path/ {print $1, $2}' awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2382  awk '/path/ {print $1, $2/100}' awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2383  awk '/path/ {print $1, $2/100\"k\"}' awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2384  awk '/path/ && $1 > 15000 {print $1, $2/100\"k\"}' awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2385  awk '/path/ && $1 > 15000 {print $1, $2/ wc' awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2386  awk '/path/ {print $1, $2/ wc' awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2387  awk '/path/ {print $1 wc' awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2388  awk '/path/ {print $1 -wc' awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2389  awk '/path/ {print $1' awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2390  awk '/path/ {print $1 -wc}' awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2391  awk '/path/ {print $1 -w}' awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2392  awk '/path/ {print $1 -c}' awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2393  awk '/path/ {print $1 -wc}' awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2394  awk '/path/ {print $1}' awkk.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2395  awk '/path/ {print $1}' awkk.txt | -wc")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2396  awk '/path/ {print $1}' awkk.txt | wc")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2397  awk '/path/ {print $1}' awkk.txt | -wc")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2398  awk '/path/ {print $1}' awkk.txt | --wc")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2399  awk '/path/ {print $1}' awkk.txt | wc -c")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2400  awk '/path/ {print $1}' awkk.txt | wc -l")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2401  awk '/path/ {print $1}' awkk.txt | wc -m")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2402  ls")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2403  cat colors.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2404  ls")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2405  cd")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2406  cd Desktop")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2407  ls")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2408  cd scripts")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2409  ls")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2410  cat rohan.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2411  cat hello.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2412  cat colors.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2413  awk '/e/ {print $1}' colors.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2414  awk '/e/ {print $2}' colors.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2415  awk '/3/ {print $2}' colors.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2416  awk '/2/ {print $2}' colors.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2417  awk '/2/ {print $1}' colors.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2418  awk '/e/ {print $1}' colors.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2419  awk '/e/ {print $2}' colors.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2420  awk '/e/ {print $2, $1}' colors.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2421  awk '/e/ $1 > 2 {print $2, $1}' colors.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2422  awk '/e/ && $1 > 2 {print $2, $1}' colors.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2423  awk '/e/ && $1 < 2 {print $2, $1}' colors.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2424  awk '/e/ && $1 . 2 {print $2, $1}' colors.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2425  PS")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2426  ps")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2427  ps | awk 'print $1'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2428  ps | awk '{print $1}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2429  ps | awk '{print $2}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2430  ps | awk '{print $3}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2431  ps | awk '{print $4}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2432  ps | awk '{print $1, $2}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2433  ps | awk '{print $0}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2434  ps | awk '{print}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2435  cd")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2436  ls")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2437  cd")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2438  ls")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2439  cd ~")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2440  ls")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2441  cd /")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2442  ls")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2443  cd home/codingdais/Desktop/scripts")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2444  ls")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - F mean filed select by default considor space")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2445  awk -F \":\" '{print $1}' /etc/passwd")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2446  awk -F \":\" '{print $1}' /etc/passwd | head")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2447  awk -F \":\" '{print $2}' /etc/passwd | head")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2448  awk -F \":\" '{print $3}' /etc/passwd | head")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2449  awk -F \":\" '{print $3 $6 $7}' /etc/passwd | head")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#  2450  awk -F ":" \'{print "$3" "$6" "$7"}\' /etc/passwd | head')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#  2451  awk -F ":" \'{print $3" "$6" "$7}\' /etc/passwd | head')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#  2452  awk -F ":" \'{print $3" \\t"$6" \\t"$7}\' /etc/passwd | head')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2453  cat /etc/shells")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2454  awk -F \"/\" '/^\\// {print $NF}' /etc/shells")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2455  awk -F \"/\" '/^\\// {print $NF}' /etc/shells | unique")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2456  awk -F \"/\" '/^\\// {print $NF}' /etc/shells | uniq")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2457  awk -F \"/\" '/^\\// {print $NF}' /etc/shells | uniq | sort")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2458  df")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2459  df | awk '/\\dev\\/loop {print $1}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2460  df | awk '/\\dev\\/loop/ {print $1}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2461  df | awk '/\\dev\\/loop/ {print $1 $2}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2462  df | awk '/\\dev\\/loop/ {print $1 $3}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2463  df | awk '/\\dev\\/loop/ {print $1 \\t $3}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2464  df | awk '/\\dev\\/loop/ {print $1\" \\t \"$3}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2465  df | awk '/\\dev\\/loop/ {print $2\" \\t \"$3}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2466  df | awk '/\\dev\\/loop/ {print $1\" \\t \"$3}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#  2467  df | awk \'/\\dev\\/loop/ {print $1" \\t "$2" \\t "$3}\'')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#  2468  df | awk \'/\\dev\\/loop/ {print $1" \\t "$2" + $3}\'')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2469  df | awk '/\\dev\\/loop/ {print $1\" \\t \"$2 + $3}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2470  awk 'length($0) > 7' /etc/shells")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2471  awk 'length($0) < 7' /etc/shells")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2472  awk 'length($0) < 12' /etc/shells")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2473  awk 'length($0) < 10' /etc/shells")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2474  ps -ef")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2475  ps -ef | awk '{ if($NF == \"/bin/fish\"} print $0'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2476  ps -ef | awk '{ if($NF == \"/bin/fish\" print $0}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2477  ps -ef | awk '{ if($NF == \"/bin/zsh\" print $0}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2478  ps -ef | awk '{ if($NF == \"/bin/zsh\") print $0}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2479  ps -ef | awk '{ if($NF == \"/bin/fish\") print $0}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2480  ps -ef | awk '{ if($NF == \"splash\") print $0}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#  2481  awk \'BEGIN {for(i=1; i<=10;i++) print "the square root of ", i, "is", i*i;}\'')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2482  awk '$1 ~/^[b,c]/ {print $0}' .bashrc")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2483  awk '$1 ~ /^[b,c]/ {print $0}' .bashrc")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2484  cd")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2485  awk '$1 ~ /^[b,c]/ {print $0}' .bashrc")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2486  cd Desktop/scripts")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2487  cat colors.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2488  awk '{print substr($0, 4)}' colors.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2489  awk '{print substr($0, 3)}' colors.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#  2490  awk \'match($0, /e/) {print $0 " has \\"o\\" character at " RSTART}\' colors.txt')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2491  df")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  2492  df | awk 'NR==7, NR==11 {print NR, $0}'")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# variables use always lowercase because global variable always uppercase")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# printenv")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# printenv HOME")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $HOME")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# myname="rohan dhiman"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $myname")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  export mean use variable another shell also like i know two shell bash, zsh")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("myname")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rohan"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" myname\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$myname")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# remove")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("unset")]),s._v(" myname\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$USER")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$LANG")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 0 TO 32767")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$RANDOM")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$UID")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# stop root user run this script for security reason")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-u")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"you are root you can\'t run this script"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create own script this path")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ls .local/bin")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  sequence number 1 to 24")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# seq iwth random number")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shuf")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  get one number random in seq")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shuf")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" text.txt\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# text one file export data text2.txt also so on terminal output by -o")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shuf")]),s._v(" text.txt "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" text2.txt\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shuf")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("-10 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--repeat")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shuf")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("-10\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" filename\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# reverse")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v(" filename\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-k")]),s._v(" 3n /etc/passwd\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-k")]),s._v(" 2n /etc/passwd\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# unique get")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" colors.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("uniq")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# only get duplicate")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" colors.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("uniq")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# uniqe with dupplicate count")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" colors.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("uniq")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" colors.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("uniq")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-nr")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# convert single line")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# seq 5")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  not working echo not take input")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# seq 5 | echo")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# we use take input ater send top echo xargs take input")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  by default echo xargs")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# show command")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d: "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" /etc/passwd "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# hello man/wowo.txt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# ls | xargs -I {} mean store in this parenthis {} value in this (echo "//////") paster value here {} this parenthis haive all value')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-I")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello man/{}"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create thousands file store in {} and print {}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-I")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(".txt\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# change .txt to text")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d. "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-I")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(".txt "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(".text\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# remove all files ssame like exec => >> xargs six time fast exec")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-type")]),s._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*.txt"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v("\n\n\n\n\n\n\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  cut")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  -c mean character  print 1 to 10 include space")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"this is a line of text"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("-10\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# this is a")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# start 11 after that print all character")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"this is a line of text"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v("-\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# line of text")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# with delamiter")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"this is a line of text"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f4")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# line")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f5")]),s._v(" /etc/passwd\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  remove with space")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"abc xyz"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# xyz")]),s._v("\n\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  tr")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  small leter change into capital leter")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"This is a line of text"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'A'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# character match not word match ious find any where replace all ious character")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"This is a line of text"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'aious'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'AIOUS'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# delete ious")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"This is a line of text"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'aious'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# remove extra space and word")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"This    iiiiiis    aaa    liiiine   ooooof   text"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-s")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'aious '")]),s._v("\nThis is a line of text\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# dont remove isous")]),s._v("\ncho "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"This    iiiiiis    aaa    liiiine   ooooof   textttt"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-cd")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'aious '")]),s._v("\nis    iiiiiis    aaa    iiii   ooooo\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"this is a strong and compolicated password -1234"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-cd")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[:digit:]'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1234")]),s._v("%\n\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sed searching string")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sed 's/find/replace/' filename")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/GREEN/Green/'")]),s._v(" colors.txt\n\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello world how are you?"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/how/How/'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# hello world How are you?")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sudo apt install tldr")]),s._v("\n\ntldr "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# multiple command")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/shells "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/usr/u/g'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/bin/b/g'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /b/sh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /b/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /u/b/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /b/rbash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /u/b/rbash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /b/dash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /u/b/dash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /b/zsh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /u/b/zsh")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" openssh-server\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl status "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--now")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl status ufw\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" ufw allow "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v("\n\nssh-keygen "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" ed25519\nssh-copy-id username@ip\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# stop password login")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/ssh/sshd_config\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# PasswordAuthentication no")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl reload sshd\n\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);